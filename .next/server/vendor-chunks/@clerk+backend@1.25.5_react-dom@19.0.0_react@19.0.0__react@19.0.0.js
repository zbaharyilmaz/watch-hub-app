"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0";
exports.ids = ["vendor-chunks/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignJWTError: () => (/* binding */ SignJWTError),\n/* harmony export */   TokenVerificationError: () => (/* binding */ TokenVerificationError),\n/* harmony export */   TokenVerificationErrorAction: () => (/* binding */ TokenVerificationErrorAction),\n/* harmony export */   TokenVerificationErrorCode: () => (/* binding */ TokenVerificationErrorCode),\n/* harmony export */   TokenVerificationErrorReason: () => (/* binding */ TokenVerificationErrorReason)\n/* harmony export */ });\n// src/errors.ts\nvar TokenVerificationErrorCode = {\n  InvalidSecretKey: \"clerk_key_invalid\"\n};\nvar TokenVerificationErrorReason = {\n  TokenExpired: \"token-expired\",\n  TokenInvalid: \"token-invalid\",\n  TokenInvalidAlgorithm: \"token-invalid-algorithm\",\n  TokenInvalidAuthorizedParties: \"token-invalid-authorized-parties\",\n  TokenInvalidSignature: \"token-invalid-signature\",\n  TokenNotActiveYet: \"token-not-active-yet\",\n  TokenIatInTheFuture: \"token-iat-in-the-future\",\n  TokenVerificationFailed: \"token-verification-failed\",\n  InvalidSecretKey: \"secret-key-invalid\",\n  LocalJWKMissing: \"jwk-local-missing\",\n  RemoteJWKFailedToLoad: \"jwk-remote-failed-to-load\",\n  RemoteJWKInvalid: \"jwk-remote-invalid\",\n  RemoteJWKMissing: \"jwk-remote-missing\",\n  JWKFailedToResolve: \"jwk-failed-to-resolve\",\n  JWKKidMismatch: \"jwk-kid-mismatch\"\n};\nvar TokenVerificationErrorAction = {\n  ContactSupport: \"Contact support@clerk.com\",\n  EnsureClerkJWT: \"Make sure that this is a valid Clerk generate JWT.\",\n  SetClerkJWTKey: \"Set the CLERK_JWT_KEY environment variable.\",\n  SetClerkSecretKey: \"Set the CLERK_SECRET_KEY environment variable.\",\n  EnsureClockSync: \"Make sure your system clock is in sync (e.g. turn off and on automatic time synchronization).\"\n};\nvar TokenVerificationError = class _TokenVerificationError extends Error {\n  constructor({\n    action,\n    message,\n    reason\n  }) {\n    super(message);\n    Object.setPrototypeOf(this, _TokenVerificationError.prototype);\n    this.reason = reason;\n    this.message = message;\n    this.action = action;\n  }\n  getFullMessage() {\n    return `${[this.message, this.action].filter((m) => m).join(\" \")} (reason=${this.reason}, token-carrier=${this.tokenCarrier})`;\n  }\n};\nvar SignJWTError = class extends Error {\n};\n\n\n//# sourceMappingURL=chunk-5JS2VYLU.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNsZXJrK2JhY2tlbmRAMS4yNS41X3JlYWN0LWRvbUAxOS4wLjBfcmVhY3RAMTkuMC4wX19yZWFjdEAxOS4wLjAvbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstNUpTMlZZTFUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx3REFBd0QsVUFBVSxZQUFZLGtCQUFrQixrQkFBa0I7QUFDaEk7QUFDQTtBQUNBO0FBQ0E7O0FBUUU7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3pleW5lcHlpbG1hei93YXRjaC1odWItYXBwL25vZGVfbW9kdWxlcy8ucG5wbS9AY2xlcmsrYmFja2VuZEAxLjI1LjVfcmVhY3QtZG9tQDE5LjAuMF9yZWFjdEAxOS4wLjBfX3JlYWN0QDE5LjAuMC9ub2RlX21vZHVsZXMvQGNsZXJrL2JhY2tlbmQvZGlzdC9jaHVuay01SlMyVllMVS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2Vycm9ycy50c1xudmFyIFRva2VuVmVyaWZpY2F0aW9uRXJyb3JDb2RlID0ge1xuICBJbnZhbGlkU2VjcmV0S2V5OiBcImNsZXJrX2tleV9pbnZhbGlkXCJcbn07XG52YXIgVG9rZW5WZXJpZmljYXRpb25FcnJvclJlYXNvbiA9IHtcbiAgVG9rZW5FeHBpcmVkOiBcInRva2VuLWV4cGlyZWRcIixcbiAgVG9rZW5JbnZhbGlkOiBcInRva2VuLWludmFsaWRcIixcbiAgVG9rZW5JbnZhbGlkQWxnb3JpdGhtOiBcInRva2VuLWludmFsaWQtYWxnb3JpdGhtXCIsXG4gIFRva2VuSW52YWxpZEF1dGhvcml6ZWRQYXJ0aWVzOiBcInRva2VuLWludmFsaWQtYXV0aG9yaXplZC1wYXJ0aWVzXCIsXG4gIFRva2VuSW52YWxpZFNpZ25hdHVyZTogXCJ0b2tlbi1pbnZhbGlkLXNpZ25hdHVyZVwiLFxuICBUb2tlbk5vdEFjdGl2ZVlldDogXCJ0b2tlbi1ub3QtYWN0aXZlLXlldFwiLFxuICBUb2tlbklhdEluVGhlRnV0dXJlOiBcInRva2VuLWlhdC1pbi10aGUtZnV0dXJlXCIsXG4gIFRva2VuVmVyaWZpY2F0aW9uRmFpbGVkOiBcInRva2VuLXZlcmlmaWNhdGlvbi1mYWlsZWRcIixcbiAgSW52YWxpZFNlY3JldEtleTogXCJzZWNyZXQta2V5LWludmFsaWRcIixcbiAgTG9jYWxKV0tNaXNzaW5nOiBcImp3ay1sb2NhbC1taXNzaW5nXCIsXG4gIFJlbW90ZUpXS0ZhaWxlZFRvTG9hZDogXCJqd2stcmVtb3RlLWZhaWxlZC10by1sb2FkXCIsXG4gIFJlbW90ZUpXS0ludmFsaWQ6IFwiandrLXJlbW90ZS1pbnZhbGlkXCIsXG4gIFJlbW90ZUpXS01pc3Npbmc6IFwiandrLXJlbW90ZS1taXNzaW5nXCIsXG4gIEpXS0ZhaWxlZFRvUmVzb2x2ZTogXCJqd2stZmFpbGVkLXRvLXJlc29sdmVcIixcbiAgSldLS2lkTWlzbWF0Y2g6IFwiandrLWtpZC1taXNtYXRjaFwiXG59O1xudmFyIFRva2VuVmVyaWZpY2F0aW9uRXJyb3JBY3Rpb24gPSB7XG4gIENvbnRhY3RTdXBwb3J0OiBcIkNvbnRhY3Qgc3VwcG9ydEBjbGVyay5jb21cIixcbiAgRW5zdXJlQ2xlcmtKV1Q6IFwiTWFrZSBzdXJlIHRoYXQgdGhpcyBpcyBhIHZhbGlkIENsZXJrIGdlbmVyYXRlIEpXVC5cIixcbiAgU2V0Q2xlcmtKV1RLZXk6IFwiU2V0IHRoZSBDTEVSS19KV1RfS0VZIGVudmlyb25tZW50IHZhcmlhYmxlLlwiLFxuICBTZXRDbGVya1NlY3JldEtleTogXCJTZXQgdGhlIENMRVJLX1NFQ1JFVF9LRVkgZW52aXJvbm1lbnQgdmFyaWFibGUuXCIsXG4gIEVuc3VyZUNsb2NrU3luYzogXCJNYWtlIHN1cmUgeW91ciBzeXN0ZW0gY2xvY2sgaXMgaW4gc3luYyAoZS5nLiB0dXJuIG9mZiBhbmQgb24gYXV0b21hdGljIHRpbWUgc3luY2hyb25pemF0aW9uKS5cIlxufTtcbnZhciBUb2tlblZlcmlmaWNhdGlvbkVycm9yID0gY2xhc3MgX1Rva2VuVmVyaWZpY2F0aW9uRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKHtcbiAgICBhY3Rpb24sXG4gICAgbWVzc2FnZSxcbiAgICByZWFzb25cbiAgfSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBfVG9rZW5WZXJpZmljYXRpb25FcnJvci5wcm90b3R5cGUpO1xuICAgIHRoaXMucmVhc29uID0gcmVhc29uO1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy5hY3Rpb24gPSBhY3Rpb247XG4gIH1cbiAgZ2V0RnVsbE1lc3NhZ2UoKSB7XG4gICAgcmV0dXJuIGAke1t0aGlzLm1lc3NhZ2UsIHRoaXMuYWN0aW9uXS5maWx0ZXIoKG0pID0+IG0pLmpvaW4oXCIgXCIpfSAocmVhc29uPSR7dGhpcy5yZWFzb259LCB0b2tlbi1jYXJyaWVyPSR7dGhpcy50b2tlbkNhcnJpZXJ9KWA7XG4gIH1cbn07XG52YXIgU2lnbkpXVEVycm9yID0gY2xhc3MgZXh0ZW5kcyBFcnJvciB7XG59O1xuXG5leHBvcnQge1xuICBUb2tlblZlcmlmaWNhdGlvbkVycm9yQ29kZSxcbiAgVG9rZW5WZXJpZmljYXRpb25FcnJvclJlYXNvbixcbiAgVG9rZW5WZXJpZmljYXRpb25FcnJvckFjdGlvbixcbiAgVG9rZW5WZXJpZmljYXRpb25FcnJvcixcbiAgU2lnbkpXVEVycm9yXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNUpTMlZZTFUubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertHeaderAlgorithm: () => (/* binding */ assertHeaderAlgorithm),\n/* harmony export */   assertHeaderType: () => (/* binding */ assertHeaderType),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt),\n/* harmony export */   getCryptoAlgorithm: () => (/* binding */ getCryptoAlgorithm),\n/* harmony export */   hasValidSignature: () => (/* binding */ hasValidSignature),\n/* harmony export */   importKey: () => (/* binding */ importKey),\n/* harmony export */   runtime: () => (/* binding */ runtime),\n/* harmony export */   verifyJwt: () => (/* binding */ verifyJwt)\n/* harmony export */ });\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #crypto */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/runtime/node/crypto.mjs\");\n/* harmony import */ var _clerk_shared_isomorphicAtob__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/isomorphicAtob */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/isomorphicAtob.mjs\");\n\n\n// src/runtime.ts\n\nvar globalFetch = fetch.bind(globalThis);\nvar runtime = {\n  crypto: _crypto__WEBPACK_IMPORTED_MODULE_1__.webcrypto,\n  get fetch() {\n    return  false ? 0 : globalFetch;\n  },\n  AbortController: globalThis.AbortController,\n  Blob: globalThis.Blob,\n  FormData: globalThis.FormData,\n  Headers: globalThis.Headers,\n  Request: globalThis.Request,\n  Response: globalThis.Response\n};\n\n// src/util/rfc4648.ts\nvar base64url = {\n  parse(string, opts) {\n    return parse(string, base64UrlEncoding, opts);\n  },\n  stringify(data, opts) {\n    return stringify(data, base64UrlEncoding, opts);\n  }\n};\nvar base64UrlEncoding = {\n  chars: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n  bits: 6\n};\nfunction parse(string, encoding, opts = {}) {\n  if (!encoding.codes) {\n    encoding.codes = {};\n    for (let i = 0; i < encoding.chars.length; ++i) {\n      encoding.codes[encoding.chars[i]] = i;\n    }\n  }\n  if (!opts.loose && string.length * encoding.bits & 7) {\n    throw new SyntaxError(\"Invalid padding\");\n  }\n  let end = string.length;\n  while (string[end - 1] === \"=\") {\n    --end;\n    if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {\n      throw new SyntaxError(\"Invalid padding\");\n    }\n  }\n  const out = new (opts.out ?? Uint8Array)(end * encoding.bits / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = encoding.codes[string[i]];\n    if (value === void 0) {\n      throw new SyntaxError(\"Invalid character \" + string[i]);\n    }\n    buffer = buffer << encoding.bits | value;\n    bits += encoding.bits;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= encoding.bits || 255 & buffer << 8 - bits) {\n    throw new SyntaxError(\"Unexpected end of data\");\n  }\n  return out;\n}\nfunction stringify(data, encoding, opts = {}) {\n  const { pad = true } = opts;\n  const mask = (1 << encoding.bits) - 1;\n  let out = \"\";\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | 255 & data[i];\n    bits += 8;\n    while (bits > encoding.bits) {\n      bits -= encoding.bits;\n      out += encoding.chars[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += encoding.chars[mask & buffer << encoding.bits - bits];\n  }\n  if (pad) {\n    while (out.length * encoding.bits & 7) {\n      out += \"=\";\n    }\n  }\n  return out;\n}\n\n// src/jwt/algorithms.ts\nvar algToHash = {\n  RS256: \"SHA-256\",\n  RS384: \"SHA-384\",\n  RS512: \"SHA-512\"\n};\nvar RSA_ALGORITHM_NAME = \"RSASSA-PKCS1-v1_5\";\nvar jwksAlgToCryptoAlg = {\n  RS256: RSA_ALGORITHM_NAME,\n  RS384: RSA_ALGORITHM_NAME,\n  RS512: RSA_ALGORITHM_NAME\n};\nvar algs = Object.keys(algToHash);\nfunction getCryptoAlgorithm(algorithmName) {\n  const hash = algToHash[algorithmName];\n  const name = jwksAlgToCryptoAlg[algorithmName];\n  if (!hash || !name) {\n    throw new Error(`Unsupported algorithm ${algorithmName}, expected one of ${algs.join(\",\")}.`);\n  }\n  return {\n    hash: { name: algToHash[algorithmName] },\n    name: jwksAlgToCryptoAlg[algorithmName]\n  };\n}\n\n// src/jwt/assertions.ts\nvar isArrayString = (s) => {\n  return Array.isArray(s) && s.length > 0 && s.every((a) => typeof a === \"string\");\n};\nvar assertAudienceClaim = (aud, audience) => {\n  const audienceList = [audience].flat().filter((a) => !!a);\n  const audList = [aud].flat().filter((a) => !!a);\n  const shouldVerifyAudience = audienceList.length > 0 && audList.length > 0;\n  if (!shouldVerifyAudience) {\n    return;\n  }\n  if (typeof aud === \"string\") {\n    if (!audienceList.includes(aud)) {\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n        message: `Invalid JWT audience claim (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(\n          audienceList\n        )}\".`\n      });\n    }\n  } else if (isArrayString(aud)) {\n    if (!aud.some((a) => audienceList.includes(a))) {\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n        message: `Invalid JWT audience claim array (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(\n          audienceList\n        )}\".`\n      });\n    }\n  }\n};\nvar assertHeaderType = (typ) => {\n  if (typeof typ === \"undefined\") {\n    return;\n  }\n  if (typ !== \"JWT\") {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalid,\n      message: `Invalid JWT type ${JSON.stringify(typ)}. Expected \"JWT\".`\n    });\n  }\n};\nvar assertHeaderAlgorithm = (alg) => {\n  if (!algs.includes(alg)) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidAlgorithm,\n      message: `Invalid JWT algorithm ${JSON.stringify(alg)}. Supported: ${algs}.`\n    });\n  }\n};\nvar assertSubClaim = (sub) => {\n  if (typeof sub !== \"string\") {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Subject claim (sub) is required and must be a string. Received ${JSON.stringify(sub)}.`\n    });\n  }\n};\nvar assertAuthorizedPartiesClaim = (azp, authorizedParties) => {\n  if (!azp || !authorizedParties || authorizedParties.length === 0) {\n    return;\n  }\n  if (!authorizedParties.includes(azp)) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidAuthorizedParties,\n      message: `Invalid JWT Authorized party claim (azp) ${JSON.stringify(azp)}. Expected \"${authorizedParties}\".`\n    });\n  }\n};\nvar assertExpirationClaim = (exp, clockSkewInMs) => {\n  if (typeof exp !== \"number\") {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT expiry date claim (exp) ${JSON.stringify(exp)}. Expected number.`\n    });\n  }\n  const currentDate = new Date(Date.now());\n  const expiryDate = /* @__PURE__ */ new Date(0);\n  expiryDate.setUTCSeconds(exp);\n  const expired = expiryDate.getTime() <= currentDate.getTime() - clockSkewInMs;\n  if (expired) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenExpired,\n      message: `JWT is expired. Expiry date: ${expiryDate.toUTCString()}, Current date: ${currentDate.toUTCString()}.`\n    });\n  }\n};\nvar assertActivationClaim = (nbf, clockSkewInMs) => {\n  if (typeof nbf === \"undefined\") {\n    return;\n  }\n  if (typeof nbf !== \"number\") {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT not before date claim (nbf) ${JSON.stringify(nbf)}. Expected number.`\n    });\n  }\n  const currentDate = new Date(Date.now());\n  const notBeforeDate = /* @__PURE__ */ new Date(0);\n  notBeforeDate.setUTCSeconds(nbf);\n  const early = notBeforeDate.getTime() > currentDate.getTime() + clockSkewInMs;\n  if (early) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenNotActiveYet,\n      message: `JWT cannot be used prior to not before date claim (nbf). Not before date: ${notBeforeDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`\n    });\n  }\n};\nvar assertIssuedAtClaim = (iat, clockSkewInMs) => {\n  if (typeof iat === \"undefined\") {\n    return;\n  }\n  if (typeof iat !== \"number\") {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Invalid JWT issued at date claim (iat) ${JSON.stringify(iat)}. Expected number.`\n    });\n  }\n  const currentDate = new Date(Date.now());\n  const issuedAtDate = /* @__PURE__ */ new Date(0);\n  issuedAtDate.setUTCSeconds(iat);\n  const postIssued = issuedAtDate.getTime() > currentDate.getTime() + clockSkewInMs;\n  if (postIssued) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenIatInTheFuture,\n      message: `JWT issued at date claim (iat) is in the future. Issued at date: ${issuedAtDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`\n    });\n  }\n};\n\n// src/jwt/cryptoKeys.ts\n\nfunction pemToBuffer(secret) {\n  const trimmed = secret.replace(/-----BEGIN.*?-----/g, \"\").replace(/-----END.*?-----/g, \"\").replace(/\\s/g, \"\");\n  const decoded = (0,_clerk_shared_isomorphicAtob__WEBPACK_IMPORTED_MODULE_2__.isomorphicAtob)(trimmed);\n  const buffer = new ArrayBuffer(decoded.length);\n  const bufView = new Uint8Array(buffer);\n  for (let i = 0, strLen = decoded.length; i < strLen; i++) {\n    bufView[i] = decoded.charCodeAt(i);\n  }\n  return bufView;\n}\nfunction importKey(key, algorithm, keyUsage) {\n  if (typeof key === \"object\") {\n    return runtime.crypto.subtle.importKey(\"jwk\", key, algorithm, false, [keyUsage]);\n  }\n  const keyData = pemToBuffer(key);\n  const format = keyUsage === \"sign\" ? \"pkcs8\" : \"spki\";\n  return runtime.crypto.subtle.importKey(format, keyData, algorithm, false, [keyUsage]);\n}\n\n// src/jwt/verifyJwt.ts\nvar DEFAULT_CLOCK_SKEW_IN_SECONDS = 5 * 1e3;\nasync function hasValidSignature(jwt, key) {\n  const { header, signature, raw } = jwt;\n  const encoder = new TextEncoder();\n  const data = encoder.encode([raw.header, raw.payload].join(\".\"));\n  const algorithm = getCryptoAlgorithm(header.alg);\n  try {\n    const cryptoKey = await importKey(key, algorithm, \"verify\");\n    const verified = await runtime.crypto.subtle.verify(algorithm.name, cryptoKey, signature, data);\n    return { data: verified };\n  } catch (error) {\n    return {\n      errors: [\n        new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n          reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidSignature,\n          message: error?.message\n        })\n      ]\n    };\n  }\n}\nfunction decodeJwt(token) {\n  const tokenParts = (token || \"\").toString().split(\".\");\n  if (tokenParts.length !== 3) {\n    return {\n      errors: [\n        new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n          reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalid,\n          message: `Invalid JWT form. A JWT consists of three parts separated by dots.`\n        })\n      ]\n    };\n  }\n  const [rawHeader, rawPayload, rawSignature] = tokenParts;\n  const decoder = new TextDecoder();\n  const header = JSON.parse(decoder.decode(base64url.parse(rawHeader, { loose: true })));\n  const payload = JSON.parse(decoder.decode(base64url.parse(rawPayload, { loose: true })));\n  const signature = base64url.parse(rawSignature, { loose: true });\n  const data = {\n    header,\n    payload,\n    signature,\n    raw: {\n      header: rawHeader,\n      payload: rawPayload,\n      signature: rawSignature,\n      text: token\n    }\n  };\n  return { data };\n}\nasync function verifyJwt(token, options) {\n  const { audience, authorizedParties, clockSkewInMs, key } = options;\n  const clockSkew = clockSkewInMs || DEFAULT_CLOCK_SKEW_IN_SECONDS;\n  const { data: decoded, errors } = decodeJwt(token);\n  if (errors) {\n    return { errors };\n  }\n  const { header, payload } = decoded;\n  try {\n    const { typ, alg } = header;\n    assertHeaderType(typ);\n    assertHeaderAlgorithm(alg);\n    const { azp, sub, aud, iat, exp, nbf } = payload;\n    assertSubClaim(sub);\n    assertAudienceClaim([aud], [audience]);\n    assertAuthorizedPartiesClaim(azp, authorizedParties);\n    assertExpirationClaim(exp, clockSkew);\n    assertActivationClaim(nbf, clockSkew);\n    assertIssuedAtClaim(iat, clockSkew);\n  } catch (err) {\n    return { errors: [err] };\n  }\n  const { data: signatureValid, errors: signatureErrors } = await hasValidSignature(decoded, key);\n  if (signatureErrors) {\n    return {\n      errors: [\n        new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n          action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorAction.EnsureClerkJWT,\n          reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenVerificationFailed,\n          message: `Error verifying JWT signature. ${signatureErrors[0]}`\n        })\n      ]\n    };\n  }\n  if (!signatureValid) {\n    return {\n      errors: [\n        new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationError({\n          reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_0__.TokenVerificationErrorReason.TokenInvalidSignature,\n          message: \"JWT signature is invalid.\"\n        })\n      ]\n    };\n  }\n  return { data: payload };\n}\n\n\n//# sourceMappingURL=chunk-AT3FJU3M.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-JRS6WBUP.mjs":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-JRS6WBUP.mjs ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthStatus: () => (/* binding */ AuthStatus),\n/* harmony export */   constants: () => (/* binding */ constants),\n/* harmony export */   createAuthenticateRequest: () => (/* binding */ createAuthenticateRequest),\n/* harmony export */   createBackendApiClient: () => (/* binding */ createBackendApiClient),\n/* harmony export */   createClerkRequest: () => (/* binding */ createClerkRequest),\n/* harmony export */   debugRequestState: () => (/* binding */ debugRequestState),\n/* harmony export */   errorThrower: () => (/* binding */ errorThrower),\n/* harmony export */   makeAuthObjectSerializable: () => (/* binding */ makeAuthObjectSerializable),\n/* harmony export */   parsePublishableKey: () => (/* reexport safe */ _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.parsePublishableKey),\n/* harmony export */   signedInAuthObject: () => (/* binding */ signedInAuthObject),\n/* harmony export */   signedOutAuthObject: () => (/* binding */ signedOutAuthObject),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-AT3FJU3M.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\");\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _clerk_shared_url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/url */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/url.mjs\");\n/* harmony import */ var _clerk_shared_retry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/retry */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/retry.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/keys */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @clerk/shared/deprecated */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/deprecated.mjs\");\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @clerk/shared/error */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/error.mjs\");\n/* harmony import */ var snakecase_keys__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! snakecase-keys */ \"(rsc)/./node_modules/.pnpm/snakecase-keys@8.0.1/node_modules/snakecase-keys/index.js\");\n/* harmony import */ var _clerk_shared_authorization__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @clerk/shared/authorization */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/authorization.mjs\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/.pnpm/cookie@1.0.2/node_modules/cookie/dist/index.js\");\n/* harmony import */ var _clerk_shared_pathToRegexp__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @clerk/shared/pathToRegexp */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/pathToRegexp.mjs\");\n\n\n\n// src/constants.ts\nvar API_URL = \"https://api.clerk.com\";\nvar API_VERSION = \"v1\";\nvar USER_AGENT = `${\"@clerk/backend\"}@${\"1.25.5\"}`;\nvar MAX_CACHE_LAST_UPDATED_AT_SECONDS = 5 * 60;\nvar SUPPORTED_BAPI_VERSION = \"2024-10-01\";\nvar Attributes = {\n  AuthToken: \"__clerkAuthToken\",\n  AuthSignature: \"__clerkAuthSignature\",\n  AuthStatus: \"__clerkAuthStatus\",\n  AuthReason: \"__clerkAuthReason\",\n  AuthMessage: \"__clerkAuthMessage\",\n  ClerkUrl: \"__clerkUrl\"\n};\nvar Cookies = {\n  Session: \"__session\",\n  Refresh: \"__refresh\",\n  ClientUat: \"__client_uat\",\n  Handshake: \"__clerk_handshake\",\n  DevBrowser: \"__clerk_db_jwt\",\n  RedirectCount: \"__clerk_redirect_count\"\n};\nvar QueryParameters = {\n  ClerkSynced: \"__clerk_synced\",\n  SuffixedCookies: \"suffixed_cookies\",\n  ClerkRedirectUrl: \"__clerk_redirect_url\",\n  // use the reference to Cookies to indicate that it's the same value\n  DevBrowser: Cookies.DevBrowser,\n  Handshake: Cookies.Handshake,\n  HandshakeHelp: \"__clerk_help\",\n  LegacyDevBrowser: \"__dev_session\",\n  HandshakeReason: \"__clerk_hs_reason\"\n};\nvar Headers2 = {\n  AuthToken: \"x-clerk-auth-token\",\n  AuthSignature: \"x-clerk-auth-signature\",\n  AuthStatus: \"x-clerk-auth-status\",\n  AuthReason: \"x-clerk-auth-reason\",\n  AuthMessage: \"x-clerk-auth-message\",\n  ClerkUrl: \"x-clerk-clerk-url\",\n  EnableDebug: \"x-clerk-debug\",\n  ClerkRequestData: \"x-clerk-request-data\",\n  ClerkRedirectTo: \"x-clerk-redirect-to\",\n  CloudFrontForwardedProto: \"cloudfront-forwarded-proto\",\n  Authorization: \"authorization\",\n  ForwardedPort: \"x-forwarded-port\",\n  ForwardedProto: \"x-forwarded-proto\",\n  ForwardedHost: \"x-forwarded-host\",\n  Accept: \"accept\",\n  Referrer: \"referer\",\n  UserAgent: \"user-agent\",\n  Origin: \"origin\",\n  Host: \"host\",\n  ContentType: \"content-type\",\n  SecFetchDest: \"sec-fetch-dest\",\n  Location: \"location\",\n  CacheControl: \"cache-control\"\n};\nvar ContentTypes = {\n  Json: \"application/json\"\n};\nvar constants = {\n  Attributes,\n  Cookies,\n  Headers: Headers2,\n  ContentTypes,\n  QueryParameters\n};\n\n// src/util/path.ts\nvar SEPARATOR = \"/\";\nvar MULTIPLE_SEPARATOR_REGEX = new RegExp(\"(?<!:)\" + SEPARATOR + \"{1,}\", \"g\");\nfunction joinPaths(...args) {\n  return args.filter((p) => p).join(SEPARATOR).replace(MULTIPLE_SEPARATOR_REGEX, SEPARATOR);\n}\n\n// src/api/endpoints/AbstractApi.ts\nvar AbstractAPI = class {\n  constructor(request) {\n    this.request = request;\n  }\n  requireId(id) {\n    if (!id) {\n      throw new Error(\"A valid resource ID is required.\");\n    }\n  }\n};\n\n// src/api/endpoints/AccountlessApplicationsAPI.ts\nvar basePath = \"/accountless_applications\";\nvar AccountlessApplicationAPI = class extends AbstractAPI {\n  async createAccountlessApplication() {\n    return this.request({\n      method: \"POST\",\n      path: basePath\n    });\n  }\n  async completeAccountlessApplicationOnboarding() {\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath, \"complete\")\n    });\n  }\n};\n\n// src/api/endpoints/AllowlistIdentifierApi.ts\nvar basePath2 = \"/allowlist_identifiers\";\nvar AllowlistIdentifierAPI = class extends AbstractAPI {\n  async getAllowlistIdentifierList() {\n    return this.request({\n      method: \"GET\",\n      path: basePath2,\n      queryParams: { paginated: true }\n    });\n  }\n  async createAllowlistIdentifier(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath2,\n      bodyParams: params\n    });\n  }\n  async deleteAllowlistIdentifier(allowlistIdentifierId) {\n    this.requireId(allowlistIdentifierId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath2, allowlistIdentifierId)\n    });\n  }\n};\n\n// src/api/endpoints/ClientApi.ts\nvar basePath3 = \"/clients\";\nvar ClientAPI = class extends AbstractAPI {\n  async getClientList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath3,\n      queryParams: { ...params, paginated: true }\n    });\n  }\n  async getClient(clientId) {\n    this.requireId(clientId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath3, clientId)\n    });\n  }\n  verifyClient(token) {\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath3, \"verify\"),\n      bodyParams: { token }\n    });\n  }\n};\n\n// src/api/endpoints/DomainApi.ts\nvar basePath4 = \"/domains\";\nvar DomainAPI = class extends AbstractAPI {\n  async deleteDomain(id) {\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath4, id)\n    });\n  }\n};\n\n// src/api/endpoints/EmailAddressApi.ts\nvar basePath5 = \"/email_addresses\";\nvar EmailAddressAPI = class extends AbstractAPI {\n  async getEmailAddress(emailAddressId) {\n    this.requireId(emailAddressId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath5, emailAddressId)\n    });\n  }\n  async createEmailAddress(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath5,\n      bodyParams: params\n    });\n  }\n  async updateEmailAddress(emailAddressId, params = {}) {\n    this.requireId(emailAddressId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath5, emailAddressId),\n      bodyParams: params\n    });\n  }\n  async deleteEmailAddress(emailAddressId) {\n    this.requireId(emailAddressId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath5, emailAddressId)\n    });\n  }\n};\n\n// src/api/endpoints/InvitationApi.ts\nvar basePath6 = \"/invitations\";\nvar InvitationAPI = class extends AbstractAPI {\n  async getInvitationList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath6,\n      queryParams: { ...params, paginated: true }\n    });\n  }\n  async createInvitation(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath6,\n      bodyParams: params\n    });\n  }\n  async revokeInvitation(invitationId) {\n    this.requireId(invitationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath6, invitationId, \"revoke\")\n    });\n  }\n};\n\n// src/api/endpoints/OrganizationApi.ts\nvar basePath7 = \"/organizations\";\nvar OrganizationAPI = class extends AbstractAPI {\n  async getOrganizationList(params) {\n    return this.request({\n      method: \"GET\",\n      path: basePath7,\n      queryParams: params\n    });\n  }\n  async createOrganization(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath7,\n      bodyParams: params\n    });\n  }\n  async getOrganization(params) {\n    const { includeMembersCount } = params;\n    const organizationIdOrSlug = \"organizationId\" in params ? params.organizationId : params.slug;\n    this.requireId(organizationIdOrSlug);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, organizationIdOrSlug),\n      queryParams: {\n        includeMembersCount\n      }\n    });\n  }\n  async updateOrganization(organizationId, params) {\n    this.requireId(organizationId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, organizationId),\n      bodyParams: params\n    });\n  }\n  async updateOrganizationLogo(organizationId, params) {\n    this.requireId(organizationId);\n    const formData = new _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.FormData();\n    formData.append(\"file\", params?.file);\n    if (params?.uploaderUserId) {\n      formData.append(\"uploader_user_id\", params?.uploaderUserId);\n    }\n    return this.request({\n      method: \"PUT\",\n      path: joinPaths(basePath7, organizationId, \"logo\"),\n      formData\n    });\n  }\n  async deleteOrganizationLogo(organizationId) {\n    this.requireId(organizationId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath7, organizationId, \"logo\")\n    });\n  }\n  async updateOrganizationMetadata(organizationId, params) {\n    this.requireId(organizationId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, organizationId, \"metadata\"),\n      bodyParams: params\n    });\n  }\n  async deleteOrganization(organizationId) {\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath7, organizationId)\n    });\n  }\n  async getOrganizationMembershipList(params) {\n    const { organizationId, ...queryParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, organizationId, \"memberships\"),\n      queryParams\n    });\n  }\n  async createOrganizationMembership(params) {\n    const { organizationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath7, organizationId, \"memberships\"),\n      bodyParams\n    });\n  }\n  async updateOrganizationMembership(params) {\n    const { organizationId, userId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, organizationId, \"memberships\", userId),\n      bodyParams\n    });\n  }\n  async updateOrganizationMembershipMetadata(params) {\n    const { organizationId, userId, ...bodyParams } = params;\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, organizationId, \"memberships\", userId, \"metadata\"),\n      bodyParams\n    });\n  }\n  async deleteOrganizationMembership(params) {\n    const { organizationId, userId } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath7, organizationId, \"memberships\", userId)\n    });\n  }\n  async getOrganizationInvitationList(params) {\n    const { organizationId, ...queryParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, organizationId, \"invitations\"),\n      queryParams\n    });\n  }\n  async createOrganizationInvitation(params) {\n    const { organizationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath7, organizationId, \"invitations\"),\n      bodyParams\n    });\n  }\n  async getOrganizationInvitation(params) {\n    const { organizationId, invitationId } = params;\n    this.requireId(organizationId);\n    this.requireId(invitationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, organizationId, \"invitations\", invitationId)\n    });\n  }\n  async revokeOrganizationInvitation(params) {\n    const { organizationId, invitationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath7, organizationId, \"invitations\", invitationId, \"revoke\"),\n      bodyParams\n    });\n  }\n  async getOrganizationDomainList(params) {\n    const { organizationId, ...queryParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath7, organizationId, \"domains\"),\n      queryParams\n    });\n  }\n  async createOrganizationDomain(params) {\n    const { organizationId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath7, organizationId, \"domains\"),\n      bodyParams: {\n        ...bodyParams,\n        verified: bodyParams.verified ?? true\n      }\n    });\n  }\n  async updateOrganizationDomain(params) {\n    const { organizationId, domainId, ...bodyParams } = params;\n    this.requireId(organizationId);\n    this.requireId(domainId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath7, organizationId, \"domains\", domainId),\n      bodyParams\n    });\n  }\n  async deleteOrganizationDomain(params) {\n    const { organizationId, domainId } = params;\n    this.requireId(organizationId);\n    this.requireId(domainId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath7, organizationId, \"domains\", domainId)\n    });\n  }\n};\n\n// src/api/endpoints/PhoneNumberApi.ts\nvar basePath8 = \"/phone_numbers\";\nvar PhoneNumberAPI = class extends AbstractAPI {\n  async getPhoneNumber(phoneNumberId) {\n    this.requireId(phoneNumberId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath8, phoneNumberId)\n    });\n  }\n  async createPhoneNumber(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath8,\n      bodyParams: params\n    });\n  }\n  async updatePhoneNumber(phoneNumberId, params = {}) {\n    this.requireId(phoneNumberId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath8, phoneNumberId),\n      bodyParams: params\n    });\n  }\n  async deletePhoneNumber(phoneNumberId) {\n    this.requireId(phoneNumberId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath8, phoneNumberId)\n    });\n  }\n};\n\n// src/api/endpoints/RedirectUrlApi.ts\nvar basePath9 = \"/redirect_urls\";\nvar RedirectUrlAPI = class extends AbstractAPI {\n  async getRedirectUrlList() {\n    return this.request({\n      method: \"GET\",\n      path: basePath9,\n      queryParams: { paginated: true }\n    });\n  }\n  async getRedirectUrl(redirectUrlId) {\n    this.requireId(redirectUrlId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath9, redirectUrlId)\n    });\n  }\n  async createRedirectUrl(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath9,\n      bodyParams: params\n    });\n  }\n  async deleteRedirectUrl(redirectUrlId) {\n    this.requireId(redirectUrlId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath9, redirectUrlId)\n    });\n  }\n};\n\n// src/api/endpoints/SessionApi.ts\nvar basePath10 = \"/sessions\";\nvar SessionAPI = class extends AbstractAPI {\n  async getSessionList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath10,\n      queryParams: { ...params, paginated: true }\n    });\n  }\n  async getSession(sessionId) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath10, sessionId)\n    });\n  }\n  async revokeSession(sessionId) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath10, sessionId, \"revoke\")\n    });\n  }\n  async verifySession(sessionId, token) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath10, sessionId, \"verify\"),\n      bodyParams: { token }\n    });\n  }\n  async getToken(sessionId, template) {\n    this.requireId(sessionId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath10, sessionId, \"tokens\", template || \"\")\n    });\n  }\n  async refreshSession(sessionId, params) {\n    this.requireId(sessionId);\n    const { suffixed_cookies, ...restParams } = params;\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath10, sessionId, \"refresh\"),\n      bodyParams: restParams,\n      queryParams: { suffixed_cookies }\n    });\n  }\n};\n\n// src/api/endpoints/SignInTokenApi.ts\nvar basePath11 = \"/sign_in_tokens\";\nvar SignInTokenAPI = class extends AbstractAPI {\n  async createSignInToken(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath11,\n      bodyParams: params\n    });\n  }\n  async revokeSignInToken(signInTokenId) {\n    this.requireId(signInTokenId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath11, signInTokenId, \"revoke\")\n    });\n  }\n};\n\n// src/util/shared.ts\n\n\n\n\n\n\nvar errorThrower = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_6__.buildErrorThrower)({ packageName: \"@clerk/backend\" });\nvar { isDevOrStagingUrl } = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.createDevOrStagingUrlCache)();\n\n// src/api/endpoints/UserApi.ts\nvar basePath12 = \"/users\";\nvar UserAPI = class extends AbstractAPI {\n  async getUserList(params = {}) {\n    const { limit, offset, orderBy, ...userCountParams } = params;\n    const [data, totalCount] = await Promise.all([\n      this.request({\n        method: \"GET\",\n        path: basePath12,\n        queryParams: params\n      }),\n      this.getCount(userCountParams)\n    ]);\n    return { data, totalCount };\n  }\n  async getUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath12, userId)\n    });\n  }\n  async createUser(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath12,\n      bodyParams: params\n    });\n  }\n  async updateUser(userId, params = {}) {\n    this.requireId(userId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath12, userId),\n      bodyParams: params\n    });\n  }\n  async updateUserProfileImage(userId, params) {\n    this.requireId(userId);\n    const formData = new _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.FormData();\n    formData.append(\"file\", params?.file);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"profile_image\"),\n      formData\n    });\n  }\n  async updateUserMetadata(userId, params) {\n    this.requireId(userId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath12, userId, \"metadata\"),\n      bodyParams: params\n    });\n  }\n  async deleteUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath12, userId)\n    });\n  }\n  async getCount(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath12, \"count\"),\n      queryParams: params\n    });\n  }\n  async getUserOauthAccessToken(userId, provider) {\n    this.requireId(userId);\n    const hasPrefix = provider.startsWith(\"oauth_\");\n    const _provider = hasPrefix ? provider : `oauth_${provider}`;\n    if (hasPrefix) {\n      (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_5__.deprecated)(\n        \"getUserOauthAccessToken(userId, provider)\",\n        \"Remove the `oauth_` prefix from the `provider` argument.\"\n      );\n    }\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath12, userId, \"oauth_access_tokens\", _provider),\n      queryParams: { paginated: true }\n    });\n  }\n  async disableUserMFA(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath12, userId, \"mfa\")\n    });\n  }\n  async getOrganizationMembershipList(params) {\n    const { userId, limit, offset } = params;\n    this.requireId(userId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath12, userId, \"organization_memberships\"),\n      queryParams: { limit, offset }\n    });\n  }\n  async verifyPassword(params) {\n    const { userId, password } = params;\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"verify_password\"),\n      bodyParams: { password }\n    });\n  }\n  async verifyTOTP(params) {\n    const { userId, code } = params;\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"verify_totp\"),\n      bodyParams: { code }\n    });\n  }\n  async banUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"ban\")\n    });\n  }\n  async unbanUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"unban\")\n    });\n  }\n  async lockUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"lock\")\n    });\n  }\n  async unlockUser(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"POST\",\n      path: joinPaths(basePath12, userId, \"unlock\")\n    });\n  }\n  async deleteUserProfileImage(userId) {\n    this.requireId(userId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath12, userId, \"profile_image\")\n    });\n  }\n};\n\n// src/api/endpoints/SamlConnectionApi.ts\nvar basePath13 = \"/saml_connections\";\nvar SamlConnectionAPI = class extends AbstractAPI {\n  async getSamlConnectionList(params = {}) {\n    return this.request({\n      method: \"GET\",\n      path: basePath13,\n      queryParams: params\n    });\n  }\n  async createSamlConnection(params) {\n    return this.request({\n      method: \"POST\",\n      path: basePath13,\n      bodyParams: params\n    });\n  }\n  async getSamlConnection(samlConnectionId) {\n    this.requireId(samlConnectionId);\n    return this.request({\n      method: \"GET\",\n      path: joinPaths(basePath13, samlConnectionId)\n    });\n  }\n  async updateSamlConnection(samlConnectionId, params = {}) {\n    this.requireId(samlConnectionId);\n    return this.request({\n      method: \"PATCH\",\n      path: joinPaths(basePath13, samlConnectionId),\n      bodyParams: params\n    });\n  }\n  async deleteSamlConnection(samlConnectionId) {\n    this.requireId(samlConnectionId);\n    return this.request({\n      method: \"DELETE\",\n      path: joinPaths(basePath13, samlConnectionId)\n    });\n  }\n};\n\n// src/api/endpoints/TestingTokenApi.ts\nvar basePath14 = \"/testing_tokens\";\nvar TestingTokenAPI = class extends AbstractAPI {\n  async createTestingToken() {\n    return this.request({\n      method: \"POST\",\n      path: basePath14\n    });\n  }\n};\n\n// src/api/request.ts\n\n\n\n// src/util/optionsAssertions.ts\nfunction assertValidSecretKey(val) {\n  if (!val || typeof val !== \"string\") {\n    throw Error(\"Missing Clerk Secret Key. Go to https://dashboard.clerk.com and get your key for your instance.\");\n  }\n}\nfunction assertValidPublishableKey(val) {\n  (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.parsePublishableKey)(val, { fatal: true });\n}\n\n// src/api/resources/AccountlessApplication.ts\nvar AccountlessApplication = class _AccountlessApplication {\n  constructor(publishableKey, secretKey, claimUrl, apiKeysUrl) {\n    this.publishableKey = publishableKey;\n    this.secretKey = secretKey;\n    this.claimUrl = claimUrl;\n    this.apiKeysUrl = apiKeysUrl;\n  }\n  static fromJSON(data) {\n    return new _AccountlessApplication(data.publishable_key, data.secret_key, data.claim_url, data.api_keys_url);\n  }\n};\n\n// src/api/resources/AllowlistIdentifier.ts\nvar AllowlistIdentifier = class _AllowlistIdentifier {\n  constructor(id, identifier, createdAt, updatedAt, invitationId) {\n    this.id = id;\n    this.identifier = identifier;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.invitationId = invitationId;\n  }\n  static fromJSON(data) {\n    return new _AllowlistIdentifier(data.id, data.identifier, data.created_at, data.updated_at, data.invitation_id);\n  }\n};\n\n// src/api/resources/Session.ts\nvar SessionActivity = class _SessionActivity {\n  constructor(id, isMobile, ipAddress, city, country, browserVersion, browserName, deviceType) {\n    this.id = id;\n    this.isMobile = isMobile;\n    this.ipAddress = ipAddress;\n    this.city = city;\n    this.country = country;\n    this.browserVersion = browserVersion;\n    this.browserName = browserName;\n    this.deviceType = deviceType;\n  }\n  static fromJSON(data) {\n    return new _SessionActivity(\n      data.id,\n      data.is_mobile,\n      data.ip_address,\n      data.city,\n      data.country,\n      data.browser_version,\n      data.browser_name,\n      data.device_type\n    );\n  }\n};\nvar Session = class _Session {\n  constructor(id, clientId, userId, status, lastActiveAt, expireAt, abandonAt, createdAt, updatedAt, lastActiveOrganizationId, latestActivity, actor = null) {\n    this.id = id;\n    this.clientId = clientId;\n    this.userId = userId;\n    this.status = status;\n    this.lastActiveAt = lastActiveAt;\n    this.expireAt = expireAt;\n    this.abandonAt = abandonAt;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.lastActiveOrganizationId = lastActiveOrganizationId;\n    this.latestActivity = latestActivity;\n    this.actor = actor;\n  }\n  static fromJSON(data) {\n    return new _Session(\n      data.id,\n      data.client_id,\n      data.user_id,\n      data.status,\n      data.last_active_at,\n      data.expire_at,\n      data.abandon_at,\n      data.created_at,\n      data.updated_at,\n      data.last_active_organization_id,\n      data.latest_activity && SessionActivity.fromJSON(data.latest_activity),\n      data.actor\n    );\n  }\n};\n\n// src/api/resources/Client.ts\nvar Client = class _Client {\n  constructor(id, sessionIds, sessions, signInId, signUpId, lastActiveSessionId, createdAt, updatedAt) {\n    this.id = id;\n    this.sessionIds = sessionIds;\n    this.sessions = sessions;\n    this.signInId = signInId;\n    this.signUpId = signUpId;\n    this.lastActiveSessionId = lastActiveSessionId;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _Client(\n      data.id,\n      data.session_ids,\n      data.sessions.map((x) => Session.fromJSON(x)),\n      data.sign_in_id,\n      data.sign_up_id,\n      data.last_active_session_id,\n      data.created_at,\n      data.updated_at\n    );\n  }\n};\n\n// src/api/resources/Cookies.ts\nvar Cookies2 = class _Cookies {\n  constructor(cookies) {\n    this.cookies = cookies;\n  }\n  static fromJSON(data) {\n    return new _Cookies(data.cookies);\n  }\n};\n\n// src/api/resources/DeletedObject.ts\nvar DeletedObject = class _DeletedObject {\n  constructor(object, id, slug, deleted) {\n    this.object = object;\n    this.id = id;\n    this.slug = slug;\n    this.deleted = deleted;\n  }\n  static fromJSON(data) {\n    return new _DeletedObject(data.object, data.id || null, data.slug || null, data.deleted);\n  }\n};\n\n// src/api/resources/Email.ts\nvar Email = class _Email {\n  constructor(id, fromEmailName, emailAddressId, toEmailAddress, subject, body, bodyPlain, status, slug, data, deliveredByClerk) {\n    this.id = id;\n    this.fromEmailName = fromEmailName;\n    this.emailAddressId = emailAddressId;\n    this.toEmailAddress = toEmailAddress;\n    this.subject = subject;\n    this.body = body;\n    this.bodyPlain = bodyPlain;\n    this.status = status;\n    this.slug = slug;\n    this.data = data;\n    this.deliveredByClerk = deliveredByClerk;\n  }\n  static fromJSON(data) {\n    return new _Email(\n      data.id,\n      data.from_email_name,\n      data.email_address_id,\n      data.to_email_address,\n      data.subject,\n      data.body,\n      data.body_plain,\n      data.status,\n      data.slug,\n      data.data,\n      data.delivered_by_clerk\n    );\n  }\n};\n\n// src/api/resources/IdentificationLink.ts\nvar IdentificationLink = class _IdentificationLink {\n  constructor(id, type) {\n    this.id = id;\n    this.type = type;\n  }\n  static fromJSON(data) {\n    return new _IdentificationLink(data.id, data.type);\n  }\n};\n\n// src/api/resources/Verification.ts\nvar Verification = class _Verification {\n  constructor(status, strategy, externalVerificationRedirectURL = null, attempts = null, expireAt = null, nonce = null, message = null) {\n    this.status = status;\n    this.strategy = strategy;\n    this.externalVerificationRedirectURL = externalVerificationRedirectURL;\n    this.attempts = attempts;\n    this.expireAt = expireAt;\n    this.nonce = nonce;\n    this.message = message;\n  }\n  static fromJSON(data) {\n    return new _Verification(\n      data.status,\n      data.strategy,\n      data.external_verification_redirect_url ? new URL(data.external_verification_redirect_url) : null,\n      data.attempts,\n      data.expire_at,\n      data.nonce\n    );\n  }\n};\n\n// src/api/resources/EmailAddress.ts\nvar EmailAddress = class _EmailAddress {\n  constructor(id, emailAddress, verification, linkedTo) {\n    this.id = id;\n    this.emailAddress = emailAddress;\n    this.verification = verification;\n    this.linkedTo = linkedTo;\n  }\n  static fromJSON(data) {\n    return new _EmailAddress(\n      data.id,\n      data.email_address,\n      data.verification && Verification.fromJSON(data.verification),\n      data.linked_to.map((link) => IdentificationLink.fromJSON(link))\n    );\n  }\n};\n\n// src/api/resources/ExternalAccount.ts\nvar ExternalAccount = class _ExternalAccount {\n  constructor(id, provider, identificationId, externalId, approvedScopes, emailAddress, firstName, lastName, imageUrl, username, publicMetadata = {}, label, verification) {\n    this.id = id;\n    this.provider = provider;\n    this.identificationId = identificationId;\n    this.externalId = externalId;\n    this.approvedScopes = approvedScopes;\n    this.emailAddress = emailAddress;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.imageUrl = imageUrl;\n    this.username = username;\n    this.publicMetadata = publicMetadata;\n    this.label = label;\n    this.verification = verification;\n  }\n  static fromJSON(data) {\n    return new _ExternalAccount(\n      data.id,\n      data.provider,\n      data.identification_id,\n      data.provider_user_id,\n      data.approved_scopes,\n      data.email_address,\n      data.first_name,\n      data.last_name,\n      data.image_url || \"\",\n      data.username,\n      data.public_metadata,\n      data.label,\n      data.verification && Verification.fromJSON(data.verification)\n    );\n  }\n};\n\n// src/api/resources/Invitation.ts\nvar Invitation = class _Invitation {\n  constructor(id, emailAddress, publicMetadata, createdAt, updatedAt, status, url, revoked) {\n    this.id = id;\n    this.emailAddress = emailAddress;\n    this.publicMetadata = publicMetadata;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.status = status;\n    this.url = url;\n    this.revoked = revoked;\n    this._raw = null;\n  }\n  get raw() {\n    return this._raw;\n  }\n  static fromJSON(data) {\n    const res = new _Invitation(\n      data.id,\n      data.email_address,\n      data.public_metadata,\n      data.created_at,\n      data.updated_at,\n      data.status,\n      data.url,\n      data.revoked\n    );\n    res._raw = data;\n    return res;\n  }\n};\n\n// src/api/resources/JSON.ts\nvar ObjectType = {\n  AccountlessApplication: \"accountless_application\",\n  AllowlistIdentifier: \"allowlist_identifier\",\n  Client: \"client\",\n  Cookies: \"cookies\",\n  Email: \"email\",\n  EmailAddress: \"email_address\",\n  ExternalAccount: \"external_account\",\n  FacebookAccount: \"facebook_account\",\n  GoogleAccount: \"google_account\",\n  Invitation: \"invitation\",\n  OauthAccessToken: \"oauth_access_token\",\n  Organization: \"organization\",\n  OrganizationDomain: \"organization_domain\",\n  OrganizationInvitation: \"organization_invitation\",\n  OrganizationMembership: \"organization_membership\",\n  PhoneNumber: \"phone_number\",\n  RedirectUrl: \"redirect_url\",\n  SamlAccount: \"saml_account\",\n  Session: \"session\",\n  SignInAttempt: \"sign_in_attempt\",\n  SignInToken: \"sign_in_token\",\n  SignUpAttempt: \"sign_up_attempt\",\n  SmsMessage: \"sms_message\",\n  User: \"user\",\n  WaitlistEntry: \"waitlist_entry\",\n  Web3Wallet: \"web3_wallet\",\n  Token: \"token\",\n  TotalCount: \"total_count\",\n  TestingToken: \"testing_token\",\n  Role: \"role\",\n  Permission: \"permission\"\n};\n\n// src/api/resources/OauthAccessToken.ts\nvar OauthAccessToken = class _OauthAccessToken {\n  constructor(externalAccountId, provider, token, publicMetadata = {}, label, scopes, tokenSecret) {\n    this.externalAccountId = externalAccountId;\n    this.provider = provider;\n    this.token = token;\n    this.publicMetadata = publicMetadata;\n    this.label = label;\n    this.scopes = scopes;\n    this.tokenSecret = tokenSecret;\n  }\n  static fromJSON(data) {\n    return new _OauthAccessToken(\n      data.external_account_id,\n      data.provider,\n      data.token,\n      data.public_metadata,\n      data.label || \"\",\n      data.scopes,\n      data.token_secret\n    );\n  }\n};\n\n// src/api/resources/Organization.ts\nvar Organization = class _Organization {\n  constructor(id, name, slug, imageUrl, hasImage, createdAt, updatedAt, publicMetadata = {}, privateMetadata = {}, maxAllowedMemberships, adminDeleteEnabled, membersCount, createdBy) {\n    this.id = id;\n    this.name = name;\n    this.slug = slug;\n    this.imageUrl = imageUrl;\n    this.hasImage = hasImage;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n    this.maxAllowedMemberships = maxAllowedMemberships;\n    this.adminDeleteEnabled = adminDeleteEnabled;\n    this.membersCount = membersCount;\n    this.createdBy = createdBy;\n    this._raw = null;\n  }\n  get raw() {\n    return this._raw;\n  }\n  static fromJSON(data) {\n    const res = new _Organization(\n      data.id,\n      data.name,\n      data.slug,\n      data.image_url || \"\",\n      data.has_image,\n      data.created_at,\n      data.updated_at,\n      data.public_metadata,\n      data.private_metadata,\n      data.max_allowed_memberships,\n      data.admin_delete_enabled,\n      data.members_count,\n      data.created_by\n    );\n    res._raw = data;\n    return res;\n  }\n};\n\n// src/api/resources/OrganizationInvitation.ts\nvar OrganizationInvitation = class _OrganizationInvitation {\n  constructor(id, emailAddress, role, organizationId, createdAt, updatedAt, status, publicMetadata = {}, privateMetadata = {}) {\n    this.id = id;\n    this.emailAddress = emailAddress;\n    this.role = role;\n    this.organizationId = organizationId;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.status = status;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n    this._raw = null;\n  }\n  get raw() {\n    return this._raw;\n  }\n  static fromJSON(data) {\n    const res = new _OrganizationInvitation(\n      data.id,\n      data.email_address,\n      data.role,\n      data.organization_id,\n      data.created_at,\n      data.updated_at,\n      data.status,\n      data.public_metadata,\n      data.private_metadata\n    );\n    res._raw = data;\n    return res;\n  }\n};\n\n// src/api/resources/OrganizationMembership.ts\nvar OrganizationMembership = class _OrganizationMembership {\n  constructor(id, role, permissions, publicMetadata = {}, privateMetadata = {}, createdAt, updatedAt, organization, publicUserData) {\n    this.id = id;\n    this.role = role;\n    this.permissions = permissions;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.organization = organization;\n    this.publicUserData = publicUserData;\n    this._raw = null;\n  }\n  get raw() {\n    return this._raw;\n  }\n  static fromJSON(data) {\n    const res = new _OrganizationMembership(\n      data.id,\n      data.role,\n      data.permissions,\n      data.public_metadata,\n      data.private_metadata,\n      data.created_at,\n      data.updated_at,\n      Organization.fromJSON(data.organization),\n      OrganizationMembershipPublicUserData.fromJSON(data.public_user_data)\n    );\n    res._raw = data;\n    return res;\n  }\n};\nvar OrganizationMembershipPublicUserData = class _OrganizationMembershipPublicUserData {\n  constructor(identifier, firstName, lastName, imageUrl, hasImage, userId) {\n    this.identifier = identifier;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.imageUrl = imageUrl;\n    this.hasImage = hasImage;\n    this.userId = userId;\n  }\n  static fromJSON(data) {\n    return new _OrganizationMembershipPublicUserData(\n      data.identifier,\n      data.first_name,\n      data.last_name,\n      data.image_url,\n      data.has_image,\n      data.user_id\n    );\n  }\n};\n\n// src/api/resources/PhoneNumber.ts\nvar PhoneNumber = class _PhoneNumber {\n  constructor(id, phoneNumber, reservedForSecondFactor, defaultSecondFactor, verification, linkedTo) {\n    this.id = id;\n    this.phoneNumber = phoneNumber;\n    this.reservedForSecondFactor = reservedForSecondFactor;\n    this.defaultSecondFactor = defaultSecondFactor;\n    this.verification = verification;\n    this.linkedTo = linkedTo;\n  }\n  static fromJSON(data) {\n    return new _PhoneNumber(\n      data.id,\n      data.phone_number,\n      data.reserved_for_second_factor,\n      data.default_second_factor,\n      data.verification && Verification.fromJSON(data.verification),\n      data.linked_to.map((link) => IdentificationLink.fromJSON(link))\n    );\n  }\n};\n\n// src/api/resources/RedirectUrl.ts\nvar RedirectUrl = class _RedirectUrl {\n  constructor(id, url, createdAt, updatedAt) {\n    this.id = id;\n    this.url = url;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _RedirectUrl(data.id, data.url, data.created_at, data.updated_at);\n  }\n};\n\n// src/api/resources/SignInTokens.ts\nvar SignInToken = class _SignInToken {\n  constructor(id, userId, token, status, url, createdAt, updatedAt) {\n    this.id = id;\n    this.userId = userId;\n    this.token = token;\n    this.status = status;\n    this.url = url;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _SignInToken(data.id, data.user_id, data.token, data.status, data.url, data.created_at, data.updated_at);\n  }\n};\n\n// src/api/resources/SMSMessage.ts\nvar SMSMessage = class _SMSMessage {\n  constructor(id, fromPhoneNumber, toPhoneNumber, message, status, phoneNumberId, data) {\n    this.id = id;\n    this.fromPhoneNumber = fromPhoneNumber;\n    this.toPhoneNumber = toPhoneNumber;\n    this.message = message;\n    this.status = status;\n    this.phoneNumberId = phoneNumberId;\n    this.data = data;\n  }\n  static fromJSON(data) {\n    return new _SMSMessage(\n      data.id,\n      data.from_phone_number,\n      data.to_phone_number,\n      data.message,\n      data.status,\n      data.phone_number_id,\n      data.data\n    );\n  }\n};\n\n// src/api/resources/Token.ts\nvar Token = class _Token {\n  constructor(jwt) {\n    this.jwt = jwt;\n  }\n  static fromJSON(data) {\n    return new _Token(data.jwt);\n  }\n};\n\n// src/api/resources/SamlConnection.ts\nvar SamlAccountConnection = class _SamlAccountConnection {\n  constructor(id, name, domain, active, provider, syncUserAttributes, allowSubdomains, allowIdpInitiated, createdAt, updatedAt) {\n    this.id = id;\n    this.name = name;\n    this.domain = domain;\n    this.active = active;\n    this.provider = provider;\n    this.syncUserAttributes = syncUserAttributes;\n    this.allowSubdomains = allowSubdomains;\n    this.allowIdpInitiated = allowIdpInitiated;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n  }\n  static fromJSON(data) {\n    return new _SamlAccountConnection(\n      data.id,\n      data.name,\n      data.domain,\n      data.active,\n      data.provider,\n      data.sync_user_attributes,\n      data.allow_subdomains,\n      data.allow_idp_initiated,\n      data.created_at,\n      data.updated_at\n    );\n  }\n};\n\n// src/api/resources/SamlAccount.ts\nvar SamlAccount = class _SamlAccount {\n  constructor(id, provider, providerUserId, active, emailAddress, firstName, lastName, verification, samlConnection) {\n    this.id = id;\n    this.provider = provider;\n    this.providerUserId = providerUserId;\n    this.active = active;\n    this.emailAddress = emailAddress;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.verification = verification;\n    this.samlConnection = samlConnection;\n  }\n  static fromJSON(data) {\n    return new _SamlAccount(\n      data.id,\n      data.provider,\n      data.provider_user_id,\n      data.active,\n      data.email_address,\n      data.first_name,\n      data.last_name,\n      data.verification && Verification.fromJSON(data.verification),\n      data.saml_connection && SamlAccountConnection.fromJSON(data.saml_connection)\n    );\n  }\n};\n\n// src/api/resources/Web3Wallet.ts\nvar Web3Wallet = class _Web3Wallet {\n  constructor(id, web3Wallet, verification) {\n    this.id = id;\n    this.web3Wallet = web3Wallet;\n    this.verification = verification;\n  }\n  static fromJSON(data) {\n    return new _Web3Wallet(data.id, data.web3_wallet, data.verification && Verification.fromJSON(data.verification));\n  }\n};\n\n// src/api/resources/User.ts\nvar User = class _User {\n  constructor(id, passwordEnabled, totpEnabled, backupCodeEnabled, twoFactorEnabled, banned, locked, createdAt, updatedAt, imageUrl, hasImage, primaryEmailAddressId, primaryPhoneNumberId, primaryWeb3WalletId, lastSignInAt, externalId, username, firstName, lastName, publicMetadata = {}, privateMetadata = {}, unsafeMetadata = {}, emailAddresses = [], phoneNumbers = [], web3Wallets = [], externalAccounts = [], samlAccounts = [], lastActiveAt, createOrganizationEnabled, createOrganizationsLimit = null, deleteSelfEnabled, legalAcceptedAt) {\n    this.id = id;\n    this.passwordEnabled = passwordEnabled;\n    this.totpEnabled = totpEnabled;\n    this.backupCodeEnabled = backupCodeEnabled;\n    this.twoFactorEnabled = twoFactorEnabled;\n    this.banned = banned;\n    this.locked = locked;\n    this.createdAt = createdAt;\n    this.updatedAt = updatedAt;\n    this.imageUrl = imageUrl;\n    this.hasImage = hasImage;\n    this.primaryEmailAddressId = primaryEmailAddressId;\n    this.primaryPhoneNumberId = primaryPhoneNumberId;\n    this.primaryWeb3WalletId = primaryWeb3WalletId;\n    this.lastSignInAt = lastSignInAt;\n    this.externalId = externalId;\n    this.username = username;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.publicMetadata = publicMetadata;\n    this.privateMetadata = privateMetadata;\n    this.unsafeMetadata = unsafeMetadata;\n    this.emailAddresses = emailAddresses;\n    this.phoneNumbers = phoneNumbers;\n    this.web3Wallets = web3Wallets;\n    this.externalAccounts = externalAccounts;\n    this.samlAccounts = samlAccounts;\n    this.lastActiveAt = lastActiveAt;\n    this.createOrganizationEnabled = createOrganizationEnabled;\n    this.createOrganizationsLimit = createOrganizationsLimit;\n    this.deleteSelfEnabled = deleteSelfEnabled;\n    this.legalAcceptedAt = legalAcceptedAt;\n    this._raw = null;\n  }\n  get raw() {\n    return this._raw;\n  }\n  static fromJSON(data) {\n    const res = new _User(\n      data.id,\n      data.password_enabled,\n      data.totp_enabled,\n      data.backup_code_enabled,\n      data.two_factor_enabled,\n      data.banned,\n      data.locked,\n      data.created_at,\n      data.updated_at,\n      data.image_url,\n      data.has_image,\n      data.primary_email_address_id,\n      data.primary_phone_number_id,\n      data.primary_web3_wallet_id,\n      data.last_sign_in_at,\n      data.external_id,\n      data.username,\n      data.first_name,\n      data.last_name,\n      data.public_metadata,\n      data.private_metadata,\n      data.unsafe_metadata,\n      (data.email_addresses || []).map((x) => EmailAddress.fromJSON(x)),\n      (data.phone_numbers || []).map((x) => PhoneNumber.fromJSON(x)),\n      (data.web3_wallets || []).map((x) => Web3Wallet.fromJSON(x)),\n      (data.external_accounts || []).map((x) => ExternalAccount.fromJSON(x)),\n      (data.saml_accounts || []).map((x) => SamlAccount.fromJSON(x)),\n      data.last_active_at,\n      data.create_organization_enabled,\n      data.create_organizations_limit,\n      data.delete_self_enabled,\n      data.legal_accepted_at\n    );\n    res._raw = data;\n    return res;\n  }\n  get primaryEmailAddress() {\n    return this.emailAddresses.find(({ id }) => id === this.primaryEmailAddressId) ?? null;\n  }\n  get primaryPhoneNumber() {\n    return this.phoneNumbers.find(({ id }) => id === this.primaryPhoneNumberId) ?? null;\n  }\n  get primaryWeb3Wallet() {\n    return this.web3Wallets.find(({ id }) => id === this.primaryWeb3WalletId) ?? null;\n  }\n  get fullName() {\n    return [this.firstName, this.lastName].join(\" \").trim() || null;\n  }\n};\n\n// src/api/resources/Deserializer.ts\nfunction deserialize(payload) {\n  let data, totalCount;\n  if (Array.isArray(payload)) {\n    const data2 = payload.map((item) => jsonToObject(item));\n    return { data: data2 };\n  } else if (isPaginated(payload)) {\n    data = payload.data.map((item) => jsonToObject(item));\n    totalCount = payload.total_count;\n    return { data, totalCount };\n  } else {\n    return { data: jsonToObject(payload) };\n  }\n}\nfunction isPaginated(payload) {\n  if (!payload || typeof payload !== \"object\" || !(\"data\" in payload)) {\n    return false;\n  }\n  return Array.isArray(payload.data) && payload.data !== void 0;\n}\nfunction getCount(item) {\n  return item.total_count;\n}\nfunction jsonToObject(item) {\n  if (typeof item !== \"string\" && \"object\" in item && \"deleted\" in item) {\n    return DeletedObject.fromJSON(item);\n  }\n  switch (item.object) {\n    case ObjectType.AccountlessApplication:\n      return AccountlessApplication.fromJSON(item);\n    case ObjectType.AllowlistIdentifier:\n      return AllowlistIdentifier.fromJSON(item);\n    case ObjectType.Client:\n      return Client.fromJSON(item);\n    case ObjectType.Cookies:\n      return Cookies2.fromJSON(item);\n    case ObjectType.EmailAddress:\n      return EmailAddress.fromJSON(item);\n    case ObjectType.Email:\n      return Email.fromJSON(item);\n    case ObjectType.Invitation:\n      return Invitation.fromJSON(item);\n    case ObjectType.OauthAccessToken:\n      return OauthAccessToken.fromJSON(item);\n    case ObjectType.Organization:\n      return Organization.fromJSON(item);\n    case ObjectType.OrganizationInvitation:\n      return OrganizationInvitation.fromJSON(item);\n    case ObjectType.OrganizationMembership:\n      return OrganizationMembership.fromJSON(item);\n    case ObjectType.PhoneNumber:\n      return PhoneNumber.fromJSON(item);\n    case ObjectType.RedirectUrl:\n      return RedirectUrl.fromJSON(item);\n    case ObjectType.SignInToken:\n      return SignInToken.fromJSON(item);\n    case ObjectType.Session:\n      return Session.fromJSON(item);\n    case ObjectType.SmsMessage:\n      return SMSMessage.fromJSON(item);\n    case ObjectType.Token:\n      return Token.fromJSON(item);\n    case ObjectType.TotalCount:\n      return getCount(item);\n    case ObjectType.User:\n      return User.fromJSON(item);\n    default:\n      return item;\n  }\n}\n\n// src/api/request.ts\nfunction buildRequest(options) {\n  const requestFn = async (requestOptions) => {\n    const {\n      secretKey,\n      requireSecretKey = true,\n      apiUrl = API_URL,\n      apiVersion = API_VERSION,\n      userAgent = USER_AGENT\n    } = options;\n    const { path, method, queryParams, headerParams, bodyParams, formData } = requestOptions;\n    if (requireSecretKey) {\n      assertValidSecretKey(secretKey);\n    }\n    const url = joinPaths(apiUrl, apiVersion, path);\n    const finalUrl = new URL(url);\n    if (queryParams) {\n      const snakecasedQueryParams = snakecase_keys__WEBPACK_IMPORTED_MODULE_7__({ ...queryParams });\n      for (const [key, val] of Object.entries(snakecasedQueryParams)) {\n        if (val) {\n          [val].flat().forEach((v) => finalUrl.searchParams.append(key, v));\n        }\n      }\n    }\n    const headers = {\n      \"Clerk-API-Version\": SUPPORTED_BAPI_VERSION,\n      \"User-Agent\": userAgent,\n      ...headerParams\n    };\n    if (secretKey) {\n      headers.Authorization = `Bearer ${secretKey}`;\n    }\n    let res;\n    try {\n      if (formData) {\n        res = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.fetch(finalUrl.href, {\n          method,\n          headers,\n          body: formData\n        });\n      } else {\n        headers[\"Content-Type\"] = \"application/json\";\n        const hasBody = method !== \"GET\" && bodyParams && Object.keys(bodyParams).length > 0;\n        const body = hasBody ? { body: JSON.stringify(snakecase_keys__WEBPACK_IMPORTED_MODULE_7__(bodyParams, { deep: false })) } : null;\n        res = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.fetch(finalUrl.href, {\n          method,\n          headers,\n          ...body\n        });\n      }\n      const isJSONResponse = res?.headers && res.headers?.get(constants.Headers.ContentType) === constants.ContentTypes.Json;\n      const responseBody = await (isJSONResponse ? res.json() : res.text());\n      if (!res.ok) {\n        return {\n          data: null,\n          errors: parseErrors(responseBody),\n          status: res?.status,\n          statusText: res?.statusText,\n          clerkTraceId: getTraceId(responseBody, res?.headers)\n        };\n      }\n      return {\n        ...deserialize(responseBody),\n        errors: null\n      };\n    } catch (err) {\n      if (err instanceof Error) {\n        return {\n          data: null,\n          errors: [\n            {\n              code: \"unexpected_error\",\n              message: err.message || \"Unexpected error\"\n            }\n          ],\n          clerkTraceId: getTraceId(err, res?.headers)\n        };\n      }\n      return {\n        data: null,\n        errors: parseErrors(err),\n        status: res?.status,\n        statusText: res?.statusText,\n        clerkTraceId: getTraceId(err, res?.headers)\n      };\n    }\n  };\n  return withLegacyRequestReturn(requestFn);\n}\nfunction getTraceId(data, headers) {\n  if (data && typeof data === \"object\" && \"clerk_trace_id\" in data && typeof data.clerk_trace_id === \"string\") {\n    return data.clerk_trace_id;\n  }\n  const cfRay = headers?.get(\"cf-ray\");\n  return cfRay || \"\";\n}\nfunction parseErrors(data) {\n  if (!!data && typeof data === \"object\" && \"errors\" in data) {\n    const errors = data.errors;\n    return errors.length > 0 ? errors.map(_clerk_shared_error__WEBPACK_IMPORTED_MODULE_6__.parseError) : [];\n  }\n  return [];\n}\nfunction withLegacyRequestReturn(cb) {\n  return async (...args) => {\n    const { data, errors, totalCount, status, statusText, clerkTraceId } = await cb(...args);\n    if (errors) {\n      const error = new _clerk_shared_error__WEBPACK_IMPORTED_MODULE_6__.ClerkAPIResponseError(statusText || \"\", {\n        data: [],\n        status,\n        clerkTraceId\n      });\n      error.errors = errors;\n      throw error;\n    }\n    if (typeof totalCount !== \"undefined\") {\n      return { data, totalCount };\n    }\n    return data;\n  };\n}\n\n// src/api/factory.ts\nfunction createBackendApiClient(options) {\n  const request = buildRequest(options);\n  return {\n    __experimental_accountlessApplications: new AccountlessApplicationAPI(\n      buildRequest({ ...options, requireSecretKey: false })\n    ),\n    allowlistIdentifiers: new AllowlistIdentifierAPI(request),\n    clients: new ClientAPI(request),\n    emailAddresses: new EmailAddressAPI(request),\n    invitations: new InvitationAPI(request),\n    organizations: new OrganizationAPI(request),\n    phoneNumbers: new PhoneNumberAPI(request),\n    redirectUrls: new RedirectUrlAPI(request),\n    sessions: new SessionAPI(request),\n    signInTokens: new SignInTokenAPI(request),\n    users: new UserAPI(request),\n    domains: new DomainAPI(request),\n    samlConnections: new SamlConnectionAPI(request),\n    testingTokens: new TestingTokenAPI(request)\n  };\n}\n\n// src/tokens/authObjects.ts\n\nvar createDebug = (data) => {\n  return () => {\n    const res = { ...data };\n    res.secretKey = (res.secretKey || \"\").substring(0, 7);\n    res.jwtKey = (res.jwtKey || \"\").substring(0, 7);\n    return { ...res };\n  };\n};\nfunction signedInAuthObject(authenticateContext, sessionToken, sessionClaims) {\n  const {\n    act: actor,\n    sid: sessionId,\n    org_id: orgId,\n    org_role: orgRole,\n    org_slug: orgSlug,\n    org_permissions: orgPermissions,\n    sub: userId,\n    fva\n  } = sessionClaims;\n  const apiClient = createBackendApiClient(authenticateContext);\n  const getToken = createGetToken({\n    sessionId,\n    sessionToken,\n    fetcher: async (...args) => (await apiClient.sessions.getToken(...args)).jwt\n  });\n  const factorVerificationAge = fva ?? null;\n  return {\n    actor,\n    sessionClaims,\n    sessionId,\n    userId,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    factorVerificationAge,\n    getToken,\n    has: (0,_clerk_shared_authorization__WEBPACK_IMPORTED_MODULE_8__.createCheckAuthorization)({ orgId, orgRole, orgPermissions, userId, factorVerificationAge }),\n    debug: createDebug({ ...authenticateContext, sessionToken })\n  };\n}\nfunction signedOutAuthObject(debugData) {\n  return {\n    sessionClaims: null,\n    sessionId: null,\n    userId: null,\n    actor: null,\n    orgId: null,\n    orgRole: null,\n    orgSlug: null,\n    orgPermissions: null,\n    factorVerificationAge: null,\n    getToken: () => Promise.resolve(null),\n    has: () => false,\n    debug: createDebug(debugData)\n  };\n}\nvar makeAuthObjectSerializable = (obj) => {\n  const { debug, getToken, has, ...rest } = obj;\n  return rest;\n};\nvar createGetToken = (params) => {\n  const { fetcher, sessionToken, sessionId } = params || {};\n  return async (options = {}) => {\n    if (!sessionId) {\n      return null;\n    }\n    if (options.template) {\n      return fetcher(sessionId, options.template);\n    }\n    return sessionToken;\n  };\n};\n\n// src/tokens/authStatus.ts\nvar AuthStatus = {\n  SignedIn: \"signed-in\",\n  SignedOut: \"signed-out\",\n  Handshake: \"handshake\"\n};\nvar AuthErrorReason = {\n  ClientUATWithoutSessionToken: \"client-uat-but-no-session-token\",\n  DevBrowserMissing: \"dev-browser-missing\",\n  DevBrowserSync: \"dev-browser-sync\",\n  PrimaryRespondsToSyncing: \"primary-responds-to-syncing\",\n  SatelliteCookieNeedsSyncing: \"satellite-needs-syncing\",\n  SessionTokenAndUATMissing: \"session-token-and-uat-missing\",\n  SessionTokenMissing: \"session-token-missing\",\n  SessionTokenExpired: \"session-token-expired\",\n  SessionTokenIATBeforeClientUAT: \"session-token-iat-before-client-uat\",\n  SessionTokenNBF: \"session-token-nbf\",\n  SessionTokenIatInTheFuture: \"session-token-iat-in-the-future\",\n  SessionTokenWithoutClientUAT: \"session-token-but-no-client-uat\",\n  ActiveOrganizationMismatch: \"active-organization-mismatch\",\n  UnexpectedError: \"unexpected-error\"\n};\nfunction signedIn(authenticateContext, sessionClaims, headers = new Headers(), token) {\n  const authObject = signedInAuthObject(authenticateContext, token, sessionClaims);\n  return {\n    status: AuthStatus.SignedIn,\n    reason: null,\n    message: null,\n    proxyUrl: authenticateContext.proxyUrl || \"\",\n    publishableKey: authenticateContext.publishableKey || \"\",\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || \"\",\n    signInUrl: authenticateContext.signInUrl || \"\",\n    signUpUrl: authenticateContext.signUpUrl || \"\",\n    afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n    isSignedIn: true,\n    toAuth: () => authObject,\n    headers,\n    token\n  };\n}\nfunction signedOut(authenticateContext, reason, message = \"\", headers = new Headers()) {\n  return withDebugHeaders({\n    status: AuthStatus.SignedOut,\n    reason,\n    message,\n    proxyUrl: authenticateContext.proxyUrl || \"\",\n    publishableKey: authenticateContext.publishableKey || \"\",\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || \"\",\n    signInUrl: authenticateContext.signInUrl || \"\",\n    signUpUrl: authenticateContext.signUpUrl || \"\",\n    afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n    isSignedIn: false,\n    headers,\n    toAuth: () => signedOutAuthObject({ ...authenticateContext, status: AuthStatus.SignedOut, reason, message }),\n    token: null\n  });\n}\nfunction handshake(authenticateContext, reason, message = \"\", headers) {\n  return withDebugHeaders({\n    status: AuthStatus.Handshake,\n    reason,\n    message,\n    publishableKey: authenticateContext.publishableKey || \"\",\n    isSatellite: authenticateContext.isSatellite || false,\n    domain: authenticateContext.domain || \"\",\n    proxyUrl: authenticateContext.proxyUrl || \"\",\n    signInUrl: authenticateContext.signInUrl || \"\",\n    signUpUrl: authenticateContext.signUpUrl || \"\",\n    afterSignInUrl: authenticateContext.afterSignInUrl || \"\",\n    afterSignUpUrl: authenticateContext.afterSignUpUrl || \"\",\n    isSignedIn: false,\n    headers,\n    toAuth: () => null,\n    token: null\n  });\n}\nvar withDebugHeaders = (requestState) => {\n  const headers = new Headers(requestState.headers || {});\n  if (requestState.message) {\n    try {\n      headers.set(constants.Headers.AuthMessage, requestState.message);\n    } catch {\n    }\n  }\n  if (requestState.reason) {\n    try {\n      headers.set(constants.Headers.AuthReason, requestState.reason);\n    } catch {\n    }\n  }\n  if (requestState.status) {\n    try {\n      headers.set(constants.Headers.AuthStatus, requestState.status);\n    } catch {\n    }\n  }\n  requestState.headers = headers;\n  return requestState;\n};\n\n// src/tokens/clerkRequest.ts\n\n\n// src/tokens/clerkUrl.ts\nvar ClerkUrl = class extends URL {\n  isCrossOrigin(other) {\n    return this.origin !== new URL(other.toString()).origin;\n  }\n};\nvar createClerkUrl = (...args) => {\n  return new ClerkUrl(...args);\n};\n\n// src/tokens/clerkRequest.ts\nvar ClerkRequest = class extends Request {\n  constructor(input, init) {\n    const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n    super(url, init || typeof input === \"string\" ? void 0 : input);\n    this.clerkUrl = this.deriveUrlFromHeaders(this);\n    this.cookies = this.parseCookies(this);\n  }\n  toJSON() {\n    return {\n      url: this.clerkUrl.href,\n      method: this.method,\n      headers: JSON.stringify(Object.fromEntries(this.headers)),\n      clerkUrl: this.clerkUrl.toString(),\n      cookies: JSON.stringify(Object.fromEntries(this.cookies))\n    };\n  }\n  /**\n   * Used to fix request.url using the x-forwarded-* headers\n   * TODO add detailed description of the issues this solves\n   */\n  deriveUrlFromHeaders(req) {\n    const initialUrl = new URL(req.url);\n    const forwardedProto = req.headers.get(constants.Headers.ForwardedProto);\n    const forwardedHost = req.headers.get(constants.Headers.ForwardedHost);\n    const host = req.headers.get(constants.Headers.Host);\n    const protocol = initialUrl.protocol;\n    const resolvedHost = this.getFirstValueFromHeader(forwardedHost) ?? host;\n    const resolvedProtocol = this.getFirstValueFromHeader(forwardedProto) ?? protocol?.replace(/[:/]/, \"\");\n    const origin = resolvedHost && resolvedProtocol ? `${resolvedProtocol}://${resolvedHost}` : initialUrl.origin;\n    if (origin === initialUrl.origin) {\n      return createClerkUrl(initialUrl);\n    }\n    return createClerkUrl(initialUrl.pathname + initialUrl.search, origin);\n  }\n  getFirstValueFromHeader(value) {\n    return value?.split(\",\")[0];\n  }\n  parseCookies(req) {\n    const cookiesRecord = (0,cookie__WEBPACK_IMPORTED_MODULE_9__.parse)(this.decodeCookieValue(req.headers.get(\"cookie\") || \"\"));\n    return new Map(Object.entries(cookiesRecord));\n  }\n  decodeCookieValue(str) {\n    return str ? str.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent) : str;\n  }\n};\nvar createClerkRequest = (...args) => {\n  return args[0] instanceof ClerkRequest ? args[0] : new ClerkRequest(...args);\n};\n\n// src/tokens/keys.ts\nvar cache = {};\nvar lastUpdatedAt = 0;\nfunction getFromCache(kid) {\n  return cache[kid];\n}\nfunction getCacheValues() {\n  return Object.values(cache);\n}\nfunction setInCache(jwk, shouldExpire = true) {\n  cache[jwk.kid] = jwk;\n  lastUpdatedAt = shouldExpire ? Date.now() : -1;\n}\nvar LocalJwkKid = \"local\";\nvar PEM_HEADER = \"-----BEGIN PUBLIC KEY-----\";\nvar PEM_TRAILER = \"-----END PUBLIC KEY-----\";\nvar RSA_PREFIX = \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\";\nvar RSA_SUFFIX = \"IDAQAB\";\nfunction loadClerkJWKFromLocal(localKey) {\n  if (!getFromCache(LocalJwkKid)) {\n    if (!localKey) {\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n        message: \"Missing local JWK.\",\n        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.LocalJWKMissing\n      });\n    }\n    const modulus = localKey.replace(/\\r\\n|\\n|\\r/g, \"\").replace(PEM_HEADER, \"\").replace(PEM_TRAILER, \"\").replace(RSA_PREFIX, \"\").replace(RSA_SUFFIX, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    setInCache(\n      {\n        kid: \"local\",\n        kty: \"RSA\",\n        alg: \"RS256\",\n        n: modulus,\n        e: \"AQAB\"\n      },\n      false\n      // local key never expires in cache\n    );\n  }\n  return getFromCache(LocalJwkKid);\n}\nasync function loadClerkJWKFromRemote({\n  secretKey,\n  apiUrl = API_URL,\n  apiVersion = API_VERSION,\n  kid,\n  skipJwksCache\n}) {\n  if (skipJwksCache || cacheHasExpired() || !getFromCache(kid)) {\n    if (!secretKey) {\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n        message: \"Failed to load JWKS from Clerk Backend or Frontend API.\",\n        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n      });\n    }\n    const fetcher = () => fetchJWKSFromBAPI(apiUrl, secretKey, apiVersion);\n    const { keys } = await (0,_clerk_shared_retry__WEBPACK_IMPORTED_MODULE_3__.retry)(fetcher);\n    if (!keys || !keys.length) {\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n        message: \"The JWKS endpoint did not contain any signing keys. Contact support@clerk.com.\",\n        reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n      });\n    }\n    keys.forEach((key) => setInCache(key));\n  }\n  const jwk = getFromCache(kid);\n  if (!jwk) {\n    const cacheValues = getCacheValues();\n    const jwkKeys = cacheValues.map((jwk2) => jwk2.kid).sort().join(\", \");\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: `Go to your Dashboard and validate your secret and public keys are correct. ${_chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport} if the issue persists.`,\n      message: `Unable to find a signing key in JWKS that matches the kid='${kid}' of the provided session token. Please make sure that the __session cookie or the HTTP authorization header contain a Clerk-generated session JWT. The following kid is available: ${jwkKeys}`,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKKidMismatch\n    });\n  }\n  return jwk;\n}\nasync function fetchJWKSFromBAPI(apiUrl, key, apiVersion) {\n  if (!key) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkSecretKey,\n      message: \"Missing Clerk Secret Key or API Key. Go to https://dashboard.clerk.com and get your key for your instance.\",\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n    });\n  }\n  const url = new URL(apiUrl);\n  url.pathname = joinPaths(url.pathname, apiVersion, \"/jwks\");\n  const response = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.fetch(url.href, {\n    headers: {\n      Authorization: `Bearer ${key}`,\n      \"Clerk-API-Version\": SUPPORTED_BAPI_VERSION,\n      \"Content-Type\": \"application/json\",\n      \"User-Agent\": USER_AGENT\n    }\n  });\n  if (!response.ok) {\n    const json = await response.json();\n    const invalidSecretKeyError = getErrorObjectByCode(json?.errors, _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorCode.InvalidSecretKey);\n    if (invalidSecretKeyError) {\n      const reason = _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.InvalidSecretKey;\n      throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n        action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n        message: invalidSecretKeyError.message,\n        reason\n      });\n    }\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.ContactSupport,\n      message: `Error loading Clerk JWKS from ${url.href} with code=${response.status}`,\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.RemoteJWKFailedToLoad\n    });\n  }\n  return response.json();\n}\nfunction cacheHasExpired() {\n  if (lastUpdatedAt === -1) {\n    return false;\n  }\n  const isExpired = Date.now() - lastUpdatedAt >= MAX_CACHE_LAST_UPDATED_AT_SECONDS * 1e3;\n  if (isExpired) {\n    cache = {};\n  }\n  return isExpired;\n}\nvar getErrorObjectByCode = (errors, code) => {\n  if (!errors) {\n    return null;\n  }\n  return errors.find((err) => err.code === code);\n};\n\n// src/tokens/verify.ts\nasync function verifyToken(token, options) {\n  const { data: decodedResult, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n  if (errors) {\n    return { errors };\n  }\n  const { header } = decodedResult;\n  const { kid } = header;\n  try {\n    let key;\n    if (options.jwtKey) {\n      key = loadClerkJWKFromLocal(options.jwtKey);\n    } else if (options.secretKey) {\n      key = await loadClerkJWKFromRemote({ ...options, kid });\n    } else {\n      return {\n        errors: [\n          new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n            action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n            message: \"Failed to resolve JWK during verification.\",\n            reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKFailedToResolve\n          })\n        ]\n      };\n    }\n    return await (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.verifyJwt)(token, { ...options, key });\n  } catch (error) {\n    return { errors: [error] };\n  }\n}\n\n// src/tokens/request.ts\n\n\n// src/tokens/authenticateContext.ts\nvar AuthenticateContext = class {\n  constructor(cookieSuffix, clerkRequest, options) {\n    this.cookieSuffix = cookieSuffix;\n    this.clerkRequest = clerkRequest;\n    this.initPublishableKeyValues(options);\n    this.initHeaderValues();\n    this.initCookieValues();\n    this.initHandshakeValues();\n    Object.assign(this, options);\n    this.clerkUrl = this.clerkRequest.clerkUrl;\n  }\n  /**\n   * Retrieves the session token from either the cookie or the header.\n   *\n   * @returns {string | undefined} The session token if available, otherwise undefined.\n   */\n  get sessionToken() {\n    return this.sessionTokenInCookie || this.sessionTokenInHeader;\n  }\n  usesSuffixedCookies() {\n    const suffixedClientUat = this.getSuffixedCookie(constants.Cookies.ClientUat);\n    const clientUat = this.getCookie(constants.Cookies.ClientUat);\n    const suffixedSession = this.getSuffixedCookie(constants.Cookies.Session) || \"\";\n    const session = this.getCookie(constants.Cookies.Session) || \"\";\n    if (session && !this.tokenHasIssuer(session)) {\n      return false;\n    }\n    if (session && !this.tokenBelongsToInstance(session)) {\n      return true;\n    }\n    if (!suffixedClientUat && !suffixedSession) {\n      return false;\n    }\n    const { data: sessionData } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(session);\n    const sessionIat = sessionData?.payload.iat || 0;\n    const { data: suffixedSessionData } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(suffixedSession);\n    const suffixedSessionIat = suffixedSessionData?.payload.iat || 0;\n    if (suffixedClientUat !== \"0\" && clientUat !== \"0\" && sessionIat > suffixedSessionIat) {\n      return false;\n    }\n    if (suffixedClientUat === \"0\" && clientUat !== \"0\") {\n      return false;\n    }\n    if (this.instanceType !== \"production\") {\n      const isSuffixedSessionExpired = this.sessionExpired(suffixedSessionData);\n      if (suffixedClientUat !== \"0\" && clientUat === \"0\" && isSuffixedSessionExpired) {\n        return false;\n      }\n    }\n    if (!suffixedClientUat && suffixedSession) {\n      return false;\n    }\n    return true;\n  }\n  initPublishableKeyValues(options) {\n    assertValidPublishableKey(options.publishableKey);\n    this.publishableKey = options.publishableKey;\n    const pk = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.parsePublishableKey)(this.publishableKey, {\n      fatal: true,\n      proxyUrl: options.proxyUrl,\n      domain: options.domain\n    });\n    this.instanceType = pk.instanceType;\n    this.frontendApi = pk.frontendApi;\n  }\n  initHeaderValues() {\n    this.sessionTokenInHeader = this.parseAuthorizationHeader(this.getHeader(constants.Headers.Authorization));\n    this.origin = this.getHeader(constants.Headers.Origin);\n    this.host = this.getHeader(constants.Headers.Host);\n    this.forwardedHost = this.getHeader(constants.Headers.ForwardedHost);\n    this.forwardedProto = this.getHeader(constants.Headers.CloudFrontForwardedProto) || this.getHeader(constants.Headers.ForwardedProto);\n    this.referrer = this.getHeader(constants.Headers.Referrer);\n    this.userAgent = this.getHeader(constants.Headers.UserAgent);\n    this.secFetchDest = this.getHeader(constants.Headers.SecFetchDest);\n    this.accept = this.getHeader(constants.Headers.Accept);\n  }\n  initCookieValues() {\n    this.sessionTokenInCookie = this.getSuffixedOrUnSuffixedCookie(constants.Cookies.Session);\n    this.refreshTokenInCookie = this.getSuffixedCookie(constants.Cookies.Refresh);\n    this.clientUat = Number.parseInt(this.getSuffixedOrUnSuffixedCookie(constants.Cookies.ClientUat) || \"\") || 0;\n  }\n  initHandshakeValues() {\n    this.devBrowserToken = this.getQueryParam(constants.QueryParameters.DevBrowser) || this.getSuffixedOrUnSuffixedCookie(constants.Cookies.DevBrowser);\n    this.handshakeToken = this.getQueryParam(constants.QueryParameters.Handshake) || this.getCookie(constants.Cookies.Handshake);\n    this.handshakeRedirectLoopCounter = Number(this.getCookie(constants.Cookies.RedirectCount)) || 0;\n  }\n  getQueryParam(name) {\n    return this.clerkRequest.clerkUrl.searchParams.get(name);\n  }\n  getHeader(name) {\n    return this.clerkRequest.headers.get(name) || void 0;\n  }\n  getCookie(name) {\n    return this.clerkRequest.cookies.get(name) || void 0;\n  }\n  getSuffixedCookie(name) {\n    return this.getCookie((0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.getSuffixedCookieName)(name, this.cookieSuffix)) || void 0;\n  }\n  getSuffixedOrUnSuffixedCookie(cookieName) {\n    if (this.usesSuffixedCookies()) {\n      return this.getSuffixedCookie(cookieName);\n    }\n    return this.getCookie(cookieName);\n  }\n  parseAuthorizationHeader(authorizationHeader) {\n    if (!authorizationHeader) {\n      return void 0;\n    }\n    const [scheme, token] = authorizationHeader.split(\" \", 2);\n    if (!token) {\n      return scheme;\n    }\n    if (scheme === \"Bearer\") {\n      return token;\n    }\n    return void 0;\n  }\n  tokenHasIssuer(token) {\n    const { data, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n    if (errors) {\n      return false;\n    }\n    return !!data.payload.iss;\n  }\n  tokenBelongsToInstance(token) {\n    if (!token) {\n      return false;\n    }\n    const { data, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n    if (errors) {\n      return false;\n    }\n    const tokenIssuer = data.payload.iss.replace(/https?:\\/\\//gi, \"\");\n    return this.frontendApi === tokenIssuer;\n  }\n  sessionExpired(jwt) {\n    return !!jwt && jwt?.payload.exp <= Date.now() / 1e3 >> 0;\n  }\n};\nvar createAuthenticateContext = async (clerkRequest, options) => {\n  const cookieSuffix = options.publishableKey ? await (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.getCookieSuffix)(options.publishableKey, _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.runtime.crypto.subtle) : \"\";\n  return new AuthenticateContext(cookieSuffix, clerkRequest, options);\n};\n\n// src/tokens/cookie.ts\nvar getCookieName = (cookieDirective) => {\n  return cookieDirective.split(\";\")[0]?.split(\"=\")[0];\n};\nvar getCookieValue = (cookieDirective) => {\n  return cookieDirective.split(\";\")[0]?.split(\"=\")[1];\n};\n\n// src/tokens/handshake.ts\nasync function verifyHandshakeJwt(token, { key }) {\n  const { data: decoded, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n  if (errors) {\n    throw errors[0];\n  }\n  const { header, payload } = decoded;\n  const { typ, alg } = header;\n  (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.assertHeaderType)(typ);\n  (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.assertHeaderAlgorithm)(alg);\n  const { data: signatureValid, errors: signatureErrors } = await (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.hasValidSignature)(decoded, key);\n  if (signatureErrors) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenVerificationFailed,\n      message: `Error verifying handshake token. ${signatureErrors[0]}`\n    });\n  }\n  if (!signatureValid) {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenInvalidSignature,\n      message: \"Handshake signature is invalid.\"\n    });\n  }\n  return payload;\n}\nasync function verifyHandshakeToken(token, options) {\n  const { secretKey, apiUrl, apiVersion, jwksCacheTtlInMs, jwtKey, skipJwksCache } = options;\n  const { data, errors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(token);\n  if (errors) {\n    throw errors[0];\n  }\n  const { kid } = data.header;\n  let key;\n  if (jwtKey) {\n    key = loadClerkJWKFromLocal(jwtKey);\n  } else if (secretKey) {\n    key = await loadClerkJWKFromRemote({ secretKey, apiUrl, apiVersion, kid, jwksCacheTtlInMs, skipJwksCache });\n  } else {\n    throw new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError({\n      action: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorAction.SetClerkJWTKey,\n      message: \"Failed to resolve JWK during handshake verification.\",\n      reason: _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.JWKFailedToResolve\n    });\n  }\n  return await verifyHandshakeJwt(token, {\n    key\n  });\n}\n\n// src/tokens/request.ts\nvar RefreshTokenErrorReason = {\n  NonEligibleNoCookie: \"non-eligible-no-refresh-cookie\",\n  NonEligibleNonGet: \"non-eligible-non-get\",\n  InvalidSessionToken: \"invalid-session-token\",\n  MissingApiClient: \"missing-api-client\",\n  MissingSessionToken: \"missing-session-token\",\n  MissingRefreshToken: \"missing-refresh-token\",\n  ExpiredSessionTokenDecodeFailed: \"expired-session-token-decode-failed\",\n  ExpiredSessionTokenMissingSidClaim: \"expired-session-token-missing-sid-claim\",\n  FetchError: \"fetch-error\",\n  UnexpectedSDKError: \"unexpected-sdk-error\",\n  UnexpectedBAPIError: \"unexpected-bapi-error\"\n};\nfunction assertSignInUrlExists(signInUrl, key) {\n  if (!signInUrl && (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_4__.isDevelopmentFromSecretKey)(key)) {\n    throw new Error(`Missing signInUrl. Pass a signInUrl for dev instances if an app is satellite`);\n  }\n}\nfunction assertProxyUrlOrDomain(proxyUrlOrDomain) {\n  if (!proxyUrlOrDomain) {\n    throw new Error(`Missing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl`);\n  }\n}\nfunction assertSignInUrlFormatAndOrigin(_signInUrl, origin) {\n  let signInUrl;\n  try {\n    signInUrl = new URL(_signInUrl);\n  } catch {\n    throw new Error(`The signInUrl needs to have a absolute url format.`);\n  }\n  if (signInUrl.origin === origin) {\n    throw new Error(`The signInUrl needs to be on a different origin than your satellite application.`);\n  }\n}\nfunction isRequestEligibleForHandshake(authenticateContext) {\n  const { accept, secFetchDest } = authenticateContext;\n  if (secFetchDest === \"document\" || secFetchDest === \"iframe\") {\n    return true;\n  }\n  if (!secFetchDest && accept?.startsWith(\"text/html\")) {\n    return true;\n  }\n  return false;\n}\nfunction isRequestEligibleForRefresh(err, authenticateContext, request) {\n  return err.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired && !!authenticateContext.refreshTokenInCookie && request.method === \"GET\";\n}\nasync function authenticateRequest(request, options) {\n  const authenticateContext = await createAuthenticateContext(createClerkRequest(request), options);\n  assertValidSecretKey(authenticateContext.secretKey);\n  if (authenticateContext.isSatellite) {\n    assertSignInUrlExists(authenticateContext.signInUrl, authenticateContext.secretKey);\n    if (authenticateContext.signInUrl && authenticateContext.origin) {\n      assertSignInUrlFormatAndOrigin(authenticateContext.signInUrl, authenticateContext.origin);\n    }\n    assertProxyUrlOrDomain(authenticateContext.proxyUrl || authenticateContext.domain);\n  }\n  const organizationSyncTargetMatchers = computeOrganizationSyncTargetMatchers(options.organizationSyncOptions);\n  function removeDevBrowserFromURL(url) {\n    const updatedURL = new URL(url);\n    updatedURL.searchParams.delete(constants.QueryParameters.DevBrowser);\n    updatedURL.searchParams.delete(constants.QueryParameters.LegacyDevBrowser);\n    return updatedURL;\n  }\n  function buildRedirectToHandshake({ handshakeReason }) {\n    const redirectUrl = removeDevBrowserFromURL(authenticateContext.clerkUrl);\n    const frontendApiNoProtocol = authenticateContext.frontendApi.replace(/http(s)?:\\/\\//, \"\");\n    const url = new URL(`https://${frontendApiNoProtocol}/v1/client/handshake`);\n    url.searchParams.append(\"redirect_url\", redirectUrl?.href || \"\");\n    url.searchParams.append(\n      constants.QueryParameters.SuffixedCookies,\n      authenticateContext.usesSuffixedCookies().toString()\n    );\n    url.searchParams.append(constants.QueryParameters.HandshakeReason, handshakeReason);\n    if (authenticateContext.instanceType === \"development\" && authenticateContext.devBrowserToken) {\n      url.searchParams.append(constants.QueryParameters.DevBrowser, authenticateContext.devBrowserToken);\n    }\n    const toActivate = getOrganizationSyncTarget(\n      authenticateContext.clerkUrl,\n      options.organizationSyncOptions,\n      organizationSyncTargetMatchers\n    );\n    if (toActivate) {\n      const params = getOrganizationSyncQueryParams(toActivate);\n      params.forEach((value, key) => {\n        url.searchParams.append(key, value);\n      });\n    }\n    return new Headers({ [constants.Headers.Location]: url.href });\n  }\n  async function resolveHandshake() {\n    const headers = new Headers({\n      \"Access-Control-Allow-Origin\": \"null\",\n      \"Access-Control-Allow-Credentials\": \"true\"\n    });\n    const handshakePayload = await verifyHandshakeToken(authenticateContext.handshakeToken, authenticateContext);\n    const cookiesToSet = handshakePayload.handshake;\n    let sessionToken = \"\";\n    cookiesToSet.forEach((x) => {\n      headers.append(\"Set-Cookie\", x);\n      if (getCookieName(x).startsWith(constants.Cookies.Session)) {\n        sessionToken = getCookieValue(x);\n      }\n    });\n    if (authenticateContext.instanceType === \"development\") {\n      const newUrl = new URL(authenticateContext.clerkUrl);\n      newUrl.searchParams.delete(constants.QueryParameters.Handshake);\n      newUrl.searchParams.delete(constants.QueryParameters.HandshakeHelp);\n      headers.append(constants.Headers.Location, newUrl.toString());\n      headers.set(constants.Headers.CacheControl, \"no-store\");\n    }\n    if (sessionToken === \"\") {\n      return signedOut(authenticateContext, AuthErrorReason.SessionTokenMissing, \"\", headers);\n    }\n    const { data, errors: [error] = [] } = await verifyToken(sessionToken, authenticateContext);\n    if (data) {\n      return signedIn(authenticateContext, data, headers, sessionToken);\n    }\n    if (authenticateContext.instanceType === \"development\" && (error?.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired || error?.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet || error?.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenIatInTheFuture)) {\n      error.tokenCarrier = \"cookie\";\n      console.error(\n        `Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will attempt to account for the clock skew in development.\n\nTo resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).\n\n---\n\n${error.getFullMessage()}`\n      );\n      const { data: retryResult, errors: [retryError] = [] } = await verifyToken(sessionToken, {\n        ...authenticateContext,\n        clockSkewInMs: 864e5\n      });\n      if (retryResult) {\n        return signedIn(authenticateContext, retryResult, headers, sessionToken);\n      }\n      throw new Error(retryError?.message || \"Clerk: Handshake retry failed.\");\n    }\n    throw new Error(error?.message || \"Clerk: Handshake failed.\");\n  }\n  async function refreshToken(authenticateContext2) {\n    if (!options.apiClient) {\n      return {\n        data: null,\n        error: {\n          message: \"An apiClient is needed to perform token refresh.\",\n          cause: { reason: RefreshTokenErrorReason.MissingApiClient }\n        }\n      };\n    }\n    const { sessionToken: expiredSessionToken, refreshTokenInCookie: refreshToken2 } = authenticateContext2;\n    if (!expiredSessionToken) {\n      return {\n        data: null,\n        error: {\n          message: \"Session token must be provided.\",\n          cause: { reason: RefreshTokenErrorReason.MissingSessionToken }\n        }\n      };\n    }\n    if (!refreshToken2) {\n      return {\n        data: null,\n        error: {\n          message: \"Refresh token must be provided.\",\n          cause: { reason: RefreshTokenErrorReason.MissingRefreshToken }\n        }\n      };\n    }\n    const { data: decodeResult, errors: decodedErrors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(expiredSessionToken);\n    if (!decodeResult || decodedErrors) {\n      return {\n        data: null,\n        error: {\n          message: \"Unable to decode the expired session token.\",\n          cause: { reason: RefreshTokenErrorReason.ExpiredSessionTokenDecodeFailed, errors: decodedErrors }\n        }\n      };\n    }\n    if (!decodeResult?.payload?.sid) {\n      return {\n        data: null,\n        error: {\n          message: \"Expired session token is missing the `sid` claim.\",\n          cause: { reason: RefreshTokenErrorReason.ExpiredSessionTokenMissingSidClaim }\n        }\n      };\n    }\n    try {\n      const response = await options.apiClient.sessions.refreshSession(decodeResult.payload.sid, {\n        format: \"cookie\",\n        suffixed_cookies: authenticateContext2.usesSuffixedCookies(),\n        expired_token: expiredSessionToken || \"\",\n        refresh_token: refreshToken2 || \"\",\n        request_origin: authenticateContext2.clerkUrl.origin,\n        // The refresh endpoint expects headers as Record<string, string[]>, so we need to transform it.\n        request_headers: Object.fromEntries(Array.from(request.headers.entries()).map(([k, v]) => [k, [v]]))\n      });\n      return { data: response.cookies, error: null };\n    } catch (err) {\n      if (err?.errors?.length) {\n        if (err.errors[0].code === \"unexpected_error\") {\n          return {\n            data: null,\n            error: {\n              message: `Fetch unexpected error`,\n              cause: { reason: RefreshTokenErrorReason.FetchError, errors: err.errors }\n            }\n          };\n        }\n        return {\n          data: null,\n          error: {\n            message: err.errors[0].code,\n            cause: { reason: err.errors[0].code, errors: err.errors }\n          }\n        };\n      } else {\n        return {\n          data: null,\n          error: {\n            message: `Unexpected Server/BAPI error`,\n            cause: { reason: RefreshTokenErrorReason.UnexpectedBAPIError, errors: [err] }\n          }\n        };\n      }\n    }\n  }\n  async function attemptRefresh(authenticateContext2) {\n    const { data: cookiesToSet, error } = await refreshToken(authenticateContext2);\n    if (!cookiesToSet || cookiesToSet.length === 0) {\n      return { data: null, error };\n    }\n    const headers = new Headers();\n    let sessionToken = \"\";\n    cookiesToSet.forEach((x) => {\n      headers.append(\"Set-Cookie\", x);\n      if (getCookieName(x).startsWith(constants.Cookies.Session)) {\n        sessionToken = getCookieValue(x);\n      }\n    });\n    const { data: jwtPayload, errors } = await verifyToken(sessionToken, authenticateContext2);\n    if (errors) {\n      return {\n        data: null,\n        error: {\n          message: `Clerk: unable to verify refreshed session token.`,\n          cause: { reason: RefreshTokenErrorReason.InvalidSessionToken, errors }\n        }\n      };\n    }\n    return { data: { jwtPayload, sessionToken, headers }, error: null };\n  }\n  function handleMaybeHandshakeStatus(authenticateContext2, reason, message, headers) {\n    if (isRequestEligibleForHandshake(authenticateContext2)) {\n      const handshakeHeaders = headers ?? buildRedirectToHandshake({ handshakeReason: reason });\n      if (handshakeHeaders.get(constants.Headers.Location)) {\n        handshakeHeaders.set(constants.Headers.CacheControl, \"no-store\");\n      }\n      const isRedirectLoop = setHandshakeInfiniteRedirectionLoopHeaders(handshakeHeaders);\n      if (isRedirectLoop) {\n        const msg = `Clerk: Refreshing the session token resulted in an infinite redirect loop. This usually means that your Clerk instance keys do not match - make sure to copy the correct publishable and secret keys from the Clerk dashboard.`;\n        console.log(msg);\n        return signedOut(authenticateContext2, reason, message);\n      }\n      return handshake(authenticateContext2, reason, message, handshakeHeaders);\n    }\n    return signedOut(authenticateContext2, reason, message);\n  }\n  function handleMaybeOrganizationSyncHandshake(authenticateContext2, auth) {\n    const organizationSyncTarget = getOrganizationSyncTarget(\n      authenticateContext2.clerkUrl,\n      options.organizationSyncOptions,\n      organizationSyncTargetMatchers\n    );\n    if (!organizationSyncTarget) {\n      return null;\n    }\n    let mustActivate = false;\n    if (organizationSyncTarget.type === \"organization\") {\n      if (organizationSyncTarget.organizationSlug && organizationSyncTarget.organizationSlug !== auth.orgSlug) {\n        mustActivate = true;\n      }\n      if (organizationSyncTarget.organizationId && organizationSyncTarget.organizationId !== auth.orgId) {\n        mustActivate = true;\n      }\n    }\n    if (organizationSyncTarget.type === \"personalAccount\" && auth.orgId) {\n      mustActivate = true;\n    }\n    if (!mustActivate) {\n      return null;\n    }\n    if (authenticateContext2.handshakeRedirectLoopCounter > 0) {\n      console.warn(\n        \"Clerk: Organization activation handshake loop detected. This is likely due to an invalid organization ID or slug. Skipping organization activation.\"\n      );\n      return null;\n    }\n    const handshakeState = handleMaybeHandshakeStatus(\n      authenticateContext2,\n      AuthErrorReason.ActiveOrganizationMismatch,\n      \"\"\n    );\n    if (handshakeState.status !== \"handshake\") {\n      return null;\n    }\n    return handshakeState;\n  }\n  async function authenticateRequestWithTokenInHeader() {\n    const { sessionTokenInHeader } = authenticateContext;\n    try {\n      const { data, errors } = await verifyToken(sessionTokenInHeader, authenticateContext);\n      if (errors) {\n        throw errors[0];\n      }\n      return signedIn(authenticateContext, data, void 0, sessionTokenInHeader);\n    } catch (err) {\n      return handleError(err, \"header\");\n    }\n  }\n  function setHandshakeInfiniteRedirectionLoopHeaders(headers) {\n    if (authenticateContext.handshakeRedirectLoopCounter === 3) {\n      return true;\n    }\n    const newCounterValue = authenticateContext.handshakeRedirectLoopCounter + 1;\n    const cookieName = constants.Cookies.RedirectCount;\n    headers.append(\"Set-Cookie\", `${cookieName}=${newCounterValue}; SameSite=Lax; HttpOnly; Max-Age=3`);\n    return false;\n  }\n  function handleHandshakeTokenVerificationErrorInDevelopment(error) {\n    if (error.reason === _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenInvalidSignature) {\n      const msg = `Clerk: Handshake token verification failed due to an invalid signature. If you have switched Clerk keys locally, clear your cookies and try again.`;\n      throw new Error(msg);\n    }\n    throw new Error(`Clerk: Handshake token verification failed: ${error.getFullMessage()}.`);\n  }\n  async function authenticateRequestWithTokenInCookie() {\n    const hasActiveClient = authenticateContext.clientUat;\n    const hasSessionToken = !!authenticateContext.sessionTokenInCookie;\n    const hasDevBrowserToken = !!authenticateContext.devBrowserToken;\n    if (authenticateContext.handshakeToken) {\n      try {\n        return await resolveHandshake();\n      } catch (error) {\n        if (error instanceof _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError && authenticateContext.instanceType === \"development\") {\n          handleHandshakeTokenVerificationErrorInDevelopment(error);\n        } else {\n          console.error(\"Clerk: unable to resolve handshake:\", error);\n        }\n      }\n    }\n    if (authenticateContext.instanceType === \"development\" && authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.DevBrowser)) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserSync, \"\");\n    }\n    const isRequestEligibleForMultiDomainSync = authenticateContext.isSatellite && authenticateContext.secFetchDest === \"document\";\n    if (authenticateContext.instanceType === \"production\" && isRequestEligibleForMultiDomainSync) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, \"\");\n    }\n    if (authenticateContext.instanceType === \"development\" && isRequestEligibleForMultiDomainSync && !authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.ClerkSynced)) {\n      const redirectURL = new URL(authenticateContext.signInUrl);\n      redirectURL.searchParams.append(\n        constants.QueryParameters.ClerkRedirectUrl,\n        authenticateContext.clerkUrl.toString()\n      );\n      const headers = new Headers({ [constants.Headers.Location]: redirectURL.toString() });\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, \"\", headers);\n    }\n    const redirectUrl = new URL(authenticateContext.clerkUrl).searchParams.get(\n      constants.QueryParameters.ClerkRedirectUrl\n    );\n    if (authenticateContext.instanceType === \"development\" && !authenticateContext.isSatellite && redirectUrl) {\n      const redirectBackToSatelliteUrl = new URL(redirectUrl);\n      if (authenticateContext.devBrowserToken) {\n        redirectBackToSatelliteUrl.searchParams.append(\n          constants.QueryParameters.DevBrowser,\n          authenticateContext.devBrowserToken\n        );\n      }\n      redirectBackToSatelliteUrl.searchParams.append(constants.QueryParameters.ClerkSynced, \"true\");\n      const headers = new Headers({ [constants.Headers.Location]: redirectBackToSatelliteUrl.toString() });\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.PrimaryRespondsToSyncing, \"\", headers);\n    }\n    if (authenticateContext.instanceType === \"development\" && !hasDevBrowserToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserMissing, \"\");\n    }\n    if (!hasActiveClient && !hasSessionToken) {\n      return signedOut(authenticateContext, AuthErrorReason.SessionTokenAndUATMissing, \"\");\n    }\n    if (!hasActiveClient && hasSessionToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenWithoutClientUAT, \"\");\n    }\n    if (hasActiveClient && !hasSessionToken) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.ClientUATWithoutSessionToken, \"\");\n    }\n    const { data: decodeResult, errors: decodedErrors } = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(authenticateContext.sessionTokenInCookie);\n    if (decodedErrors) {\n      return handleError(decodedErrors[0], \"cookie\");\n    }\n    if (decodeResult.payload.iat < authenticateContext.clientUat) {\n      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenIATBeforeClientUAT, \"\");\n    }\n    try {\n      const { data, errors } = await verifyToken(authenticateContext.sessionTokenInCookie, authenticateContext);\n      if (errors) {\n        throw errors[0];\n      }\n      const signedInRequestState = signedIn(\n        authenticateContext,\n        data,\n        void 0,\n        authenticateContext.sessionTokenInCookie\n      );\n      const handshakeRequestState = handleMaybeOrganizationSyncHandshake(\n        authenticateContext,\n        signedInRequestState.toAuth()\n      );\n      if (handshakeRequestState) {\n        return handshakeRequestState;\n      }\n      return signedInRequestState;\n    } catch (err) {\n      return handleError(err, \"cookie\");\n    }\n    return signedOut(authenticateContext, AuthErrorReason.UnexpectedError);\n  }\n  async function handleError(err, tokenCarrier) {\n    if (!(err instanceof _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationError)) {\n      return signedOut(authenticateContext, AuthErrorReason.UnexpectedError);\n    }\n    let refreshError;\n    if (isRequestEligibleForRefresh(err, authenticateContext, request)) {\n      const { data, error } = await attemptRefresh(authenticateContext);\n      if (data) {\n        return signedIn(authenticateContext, data.jwtPayload, data.headers, data.sessionToken);\n      }\n      if (error?.cause?.reason) {\n        refreshError = error.cause.reason;\n      } else {\n        refreshError = RefreshTokenErrorReason.UnexpectedSDKError;\n      }\n    } else {\n      if (request.method !== \"GET\") {\n        refreshError = RefreshTokenErrorReason.NonEligibleNonGet;\n      } else if (!authenticateContext.refreshTokenInCookie) {\n        refreshError = RefreshTokenErrorReason.NonEligibleNoCookie;\n      } else {\n        refreshError = null;\n      }\n    }\n    err.tokenCarrier = tokenCarrier;\n    const reasonToHandshake = [\n      _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired,\n      _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet,\n      _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenIatInTheFuture\n    ].includes(err.reason);\n    if (reasonToHandshake) {\n      return handleMaybeHandshakeStatus(\n        authenticateContext,\n        convertTokenVerificationErrorReasonToAuthErrorReason({ tokenError: err.reason, refreshError }),\n        err.getFullMessage()\n      );\n    }\n    return signedOut(authenticateContext, err.reason, err.getFullMessage());\n  }\n  if (authenticateContext.sessionTokenInHeader) {\n    return authenticateRequestWithTokenInHeader();\n  }\n  return authenticateRequestWithTokenInCookie();\n}\nvar debugRequestState = (params) => {\n  const { isSignedIn, proxyUrl, reason, message, publishableKey, isSatellite, domain } = params;\n  return { isSignedIn, proxyUrl, reason, message, publishableKey, isSatellite, domain };\n};\nfunction computeOrganizationSyncTargetMatchers(options) {\n  let personalAccountMatcher = null;\n  if (options?.personalAccountPatterns) {\n    try {\n      personalAccountMatcher = (0,_clerk_shared_pathToRegexp__WEBPACK_IMPORTED_MODULE_10__.match)(options.personalAccountPatterns);\n    } catch (e) {\n      throw new Error(`Invalid personal account pattern \"${options.personalAccountPatterns}\": \"${e}\"`);\n    }\n  }\n  let organizationMatcher = null;\n  if (options?.organizationPatterns) {\n    try {\n      organizationMatcher = (0,_clerk_shared_pathToRegexp__WEBPACK_IMPORTED_MODULE_10__.match)(options.organizationPatterns);\n    } catch (e) {\n      throw new Error(`Clerk: Invalid organization pattern \"${options.organizationPatterns}\": \"${e}\"`);\n    }\n  }\n  return {\n    OrganizationMatcher: organizationMatcher,\n    PersonalAccountMatcher: personalAccountMatcher\n  };\n}\nfunction getOrganizationSyncTarget(url, options, matchers) {\n  if (!options) {\n    return null;\n  }\n  if (matchers.OrganizationMatcher) {\n    let orgResult;\n    try {\n      orgResult = matchers.OrganizationMatcher(url.pathname);\n    } catch (e) {\n      console.error(`Clerk: Failed to apply organization pattern \"${options.organizationPatterns}\" to a path`, e);\n      return null;\n    }\n    if (orgResult && \"params\" in orgResult) {\n      const params = orgResult.params;\n      if (\"id\" in params && typeof params.id === \"string\") {\n        return { type: \"organization\", organizationId: params.id };\n      }\n      if (\"slug\" in params && typeof params.slug === \"string\") {\n        return { type: \"organization\", organizationSlug: params.slug };\n      }\n      console.warn(\n        \"Clerk: Detected an organization pattern match, but no organization ID or slug was found in the URL. Does the pattern include `:id` or `:slug`?\"\n      );\n    }\n  }\n  if (matchers.PersonalAccountMatcher) {\n    let personalResult;\n    try {\n      personalResult = matchers.PersonalAccountMatcher(url.pathname);\n    } catch (e) {\n      console.error(`Failed to apply personal account pattern \"${options.personalAccountPatterns}\" to a path`, e);\n      return null;\n    }\n    if (personalResult) {\n      return { type: \"personalAccount\" };\n    }\n  }\n  return null;\n}\nfunction getOrganizationSyncQueryParams(toActivate) {\n  const ret = /* @__PURE__ */ new Map();\n  if (toActivate.type === \"personalAccount\") {\n    ret.set(\"organization_id\", \"\");\n  }\n  if (toActivate.type === \"organization\") {\n    if (toActivate.organizationId) {\n      ret.set(\"organization_id\", toActivate.organizationId);\n    }\n    if (toActivate.organizationSlug) {\n      ret.set(\"organization_id\", toActivate.organizationSlug);\n    }\n  }\n  return ret;\n}\nvar convertTokenVerificationErrorReasonToAuthErrorReason = ({\n  tokenError,\n  refreshError\n}) => {\n  switch (tokenError) {\n    case _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenExpired:\n      return `${AuthErrorReason.SessionTokenExpired}-refresh-${refreshError}`;\n    case _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenNotActiveYet:\n      return AuthErrorReason.SessionTokenNBF;\n    case _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_1__.TokenVerificationErrorReason.TokenIatInTheFuture:\n      return AuthErrorReason.SessionTokenIatInTheFuture;\n    default:\n      return AuthErrorReason.UnexpectedError;\n  }\n};\n\n// src/util/mergePreDefinedOptions.ts\nfunction mergePreDefinedOptions(preDefinedOptions, options) {\n  return Object.keys(preDefinedOptions).reduce(\n    (obj, key) => {\n      return { ...obj, [key]: options[key] || obj[key] };\n    },\n    { ...preDefinedOptions }\n  );\n}\n\n// src/tokens/factory.ts\nvar defaultOptions = {\n  secretKey: \"\",\n  jwtKey: \"\",\n  apiUrl: void 0,\n  apiVersion: void 0,\n  proxyUrl: \"\",\n  publishableKey: \"\",\n  isSatellite: false,\n  domain: \"\",\n  audience: \"\"\n};\nfunction createAuthenticateRequest(params) {\n  const buildTimeOptions = mergePreDefinedOptions(defaultOptions, params.options);\n  const apiClient = params.apiClient;\n  const authenticateRequest2 = (request, options = {}) => {\n    const { apiUrl, apiVersion } = buildTimeOptions;\n    const runTimeOptions = mergePreDefinedOptions(buildTimeOptions, options);\n    return authenticateRequest(request, {\n      ...options,\n      ...runTimeOptions,\n      // We should add all the omitted props from options here (eg apiUrl / apiVersion)\n      // to avoid runtime options override them.\n      apiUrl,\n      apiVersion,\n      apiClient\n    });\n  };\n  return {\n    authenticateRequest: authenticateRequest2,\n    debugRequestState\n  };\n}\n\n\n//# sourceMappingURL=chunk-JRS6WBUP.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-JRS6WBUP.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withLegacyReturn: () => (/* binding */ withLegacyReturn),\n/* harmony export */   withLegacySyncReturn: () => (/* binding */ withLegacySyncReturn)\n/* harmony export */ });\n// src/jwt/legacyReturn.ts\nfunction withLegacyReturn(cb) {\n  return async (...args) => {\n    const { data, errors } = await cb(...args);\n    if (errors) {\n      throw errors[0];\n    }\n    return data;\n  };\n}\nfunction withLegacySyncReturn(cb) {\n  return (...args) => {\n    const { data, errors } = cb(...args);\n    if (errors) {\n      throw errors[0];\n    }\n    return data;\n  };\n}\n\n\n//# sourceMappingURL=chunk-P263NW7Z.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNsZXJrK2JhY2tlbmRAMS4yNS41X3JlYWN0LWRvbUAxOS4wLjBfcmVhY3RAMTkuMC4wX19yZWFjdEAxOS4wLjAvbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstUDI2M05XN1oubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxlQUFlO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGVBQWU7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy96ZXluZXB5aWxtYXovd2F0Y2gtaHViLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGNsZXJrK2JhY2tlbmRAMS4yNS41X3JlYWN0LWRvbUAxOS4wLjBfcmVhY3RAMTkuMC4wX19yZWFjdEAxOS4wLjAvbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvY2h1bmstUDI2M05XN1oubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9qd3QvbGVnYWN5UmV0dXJuLnRzXG5mdW5jdGlvbiB3aXRoTGVnYWN5UmV0dXJuKGNiKSB7XG4gIHJldHVybiBhc3luYyAoLi4uYXJncykgPT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3JzIH0gPSBhd2FpdCBjYiguLi5hcmdzKTtcbiAgICBpZiAoZXJyb3JzKSB7XG4gICAgICB0aHJvdyBlcnJvcnNbMF07XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9O1xufVxuZnVuY3Rpb24gd2l0aExlZ2FjeVN5bmNSZXR1cm4oY2IpIHtcbiAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvcnMgfSA9IGNiKC4uLmFyZ3MpO1xuICAgIGlmIChlcnJvcnMpIHtcbiAgICAgIHRocm93IGVycm9yc1swXTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH07XG59XG5cbmV4cG9ydCB7XG4gIHdpdGhMZWdhY3lSZXR1cm4sXG4gIHdpdGhMZWdhY3lTeW5jUmV0dXJuXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstUDI2M05XN1oubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/index.mjs":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/index.mjs ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClerkClient: () => (/* binding */ createClerkClient),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken2)\n/* harmony export */ });\n/* harmony import */ var _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-JRS6WBUP.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-JRS6WBUP.mjs\");\n/* harmony import */ var _chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-P263NW7Z.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs\");\n/* harmony import */ var _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-AT3FJU3M.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\");\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/telemetry.mjs\");\n\n\n\n\n\n// src/index.ts\n\nvar verifyToken2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_1__.withLegacyReturn)(_chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.verifyToken);\nfunction createClerkClient(options) {\n  const opts = { ...options };\n  const apiClient = (0,_chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.createBackendApiClient)(opts);\n  const requestState = (0,_chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.createAuthenticateRequest)({ options: opts, apiClient });\n  const telemetry = new _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_4__.TelemetryCollector({\n    ...options.telemetry,\n    publishableKey: opts.publishableKey,\n    secretKey: opts.secretKey,\n    samplingRate: 0.1,\n    ...opts.sdkMetadata ? { sdk: opts.sdkMetadata.name, sdkVersion: opts.sdkMetadata.version } : {}\n  });\n  return {\n    ...apiClient,\n    ...requestState,\n    telemetry\n  };\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNsZXJrK2JhY2tlbmRAMS4yNS41X3JlYWN0LWRvbUAxOS4wLjBfcmVhY3RAMTkuMC4wX19yZWFjdEAxOS4wLjAvbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFJOEI7QUFHQTtBQUNBO0FBQ0E7O0FBRTlCO0FBQzZEO0FBQzdELG1CQUFtQixxRUFBZ0IsQ0FBQyw0REFBVztBQUMvQztBQUNBLGlCQUFpQjtBQUNqQixvQkFBb0IsMkVBQXNCO0FBQzFDLHVCQUF1Qiw4RUFBeUIsR0FBRywwQkFBMEI7QUFDN0Usd0JBQXdCLHVFQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtRUFBbUU7QUFDL0YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy96ZXluZXB5aWxtYXovd2F0Y2gtaHViLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGNsZXJrK2JhY2tlbmRAMS4yNS41X3JlYWN0LWRvbUAxOS4wLjBfcmVhY3RAMTkuMC4wX19yZWFjdEAxOS4wLjAvbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGNyZWF0ZUF1dGhlbnRpY2F0ZVJlcXVlc3QsXG4gIGNyZWF0ZUJhY2tlbmRBcGlDbGllbnQsXG4gIHZlcmlmeVRva2VuXG59IGZyb20gXCIuL2NodW5rLUpSUzZXQlVQLm1qc1wiO1xuaW1wb3J0IHtcbiAgd2l0aExlZ2FjeVJldHVyblxufSBmcm9tIFwiLi9jaHVuay1QMjYzTlc3Wi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstQVQzRkpVM00ubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLTVKUzJWWUxVLm1qc1wiO1xuXG4vLyBzcmMvaW5kZXgudHNcbmltcG9ydCB7IFRlbGVtZXRyeUNvbGxlY3RvciB9IGZyb20gXCJAY2xlcmsvc2hhcmVkL3RlbGVtZXRyeVwiO1xudmFyIHZlcmlmeVRva2VuMiA9IHdpdGhMZWdhY3lSZXR1cm4odmVyaWZ5VG9rZW4pO1xuZnVuY3Rpb24gY3JlYXRlQ2xlcmtDbGllbnQob3B0aW9ucykge1xuICBjb25zdCBvcHRzID0geyAuLi5vcHRpb25zIH07XG4gIGNvbnN0IGFwaUNsaWVudCA9IGNyZWF0ZUJhY2tlbmRBcGlDbGllbnQob3B0cyk7XG4gIGNvbnN0IHJlcXVlc3RTdGF0ZSA9IGNyZWF0ZUF1dGhlbnRpY2F0ZVJlcXVlc3QoeyBvcHRpb25zOiBvcHRzLCBhcGlDbGllbnQgfSk7XG4gIGNvbnN0IHRlbGVtZXRyeSA9IG5ldyBUZWxlbWV0cnlDb2xsZWN0b3Ioe1xuICAgIC4uLm9wdGlvbnMudGVsZW1ldHJ5LFxuICAgIHB1Ymxpc2hhYmxlS2V5OiBvcHRzLnB1Ymxpc2hhYmxlS2V5LFxuICAgIHNlY3JldEtleTogb3B0cy5zZWNyZXRLZXksXG4gICAgc2FtcGxpbmdSYXRlOiAwLjEsXG4gICAgLi4ub3B0cy5zZGtNZXRhZGF0YSA/IHsgc2RrOiBvcHRzLnNka01ldGFkYXRhLm5hbWUsIHNka1ZlcnNpb246IG9wdHMuc2RrTWV0YWRhdGEudmVyc2lvbiB9IDoge31cbiAgfSk7XG4gIHJldHVybiB7XG4gICAgLi4uYXBpQ2xpZW50LFxuICAgIC4uLnJlcXVlc3RTdGF0ZSxcbiAgICB0ZWxlbWV0cnlcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIGNyZWF0ZUNsZXJrQ2xpZW50LFxuICB2ZXJpZnlUb2tlbjIgYXMgdmVyaWZ5VG9rZW5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/internal.mjs":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/internal.mjs ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthStatus: () => (/* reexport safe */ _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthStatus),\n/* harmony export */   constants: () => (/* reexport safe */ _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.constants),\n/* harmony export */   createAuthenticateRequest: () => (/* reexport safe */ _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.createAuthenticateRequest),\n/* harmony export */   createClerkRequest: () => (/* reexport safe */ _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.createClerkRequest),\n/* harmony export */   createRedirect: () => (/* binding */ createRedirect),\n/* harmony export */   debugRequestState: () => (/* reexport safe */ _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.debugRequestState),\n/* harmony export */   decorateObjectWithResources: () => (/* binding */ decorateObjectWithResources),\n/* harmony export */   makeAuthObjectSerializable: () => (/* reexport safe */ _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.makeAuthObjectSerializable),\n/* harmony export */   reverificationError: () => (/* reexport safe */ _clerk_shared_authorization_errors__WEBPACK_IMPORTED_MODULE_4__.reverificationError),\n/* harmony export */   reverificationErrorResponse: () => (/* reexport safe */ _clerk_shared_authorization_errors__WEBPACK_IMPORTED_MODULE_4__.reverificationErrorResponse),\n/* harmony export */   signedInAuthObject: () => (/* reexport safe */ _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.signedInAuthObject),\n/* harmony export */   signedOutAuthObject: () => (/* reexport safe */ _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.signedOutAuthObject),\n/* harmony export */   stripPrivateDataFromObject: () => (/* binding */ stripPrivateDataFromObject)\n/* harmony export */ });\n/* harmony import */ var _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-JRS6WBUP.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-JRS6WBUP.mjs\");\n/* harmony import */ var _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-AT3FJU3M.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\");\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-5JS2VYLU.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n/* harmony import */ var _clerk_shared_buildAccountsBaseUrl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/buildAccountsBaseUrl */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/buildAccountsBaseUrl.mjs\");\n/* harmony import */ var _clerk_shared_authorization_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/authorization-errors */ \"(rsc)/./node_modules/.pnpm/@clerk+shared@3.2.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/shared/dist/authorization-errors.mjs\");\n\n\n\n\n// src/createRedirect.ts\n\nvar buildUrl = (_baseUrl, _targetUrl, _returnBackUrl, _devBrowserToken) => {\n  if (_baseUrl === \"\") {\n    return legacyBuildUrl(_targetUrl.toString(), _returnBackUrl?.toString());\n  }\n  const baseUrl = new URL(_baseUrl);\n  const returnBackUrl = _returnBackUrl ? new URL(_returnBackUrl, baseUrl) : void 0;\n  const res = new URL(_targetUrl, baseUrl);\n  if (returnBackUrl) {\n    res.searchParams.set(\"redirect_url\", returnBackUrl.toString());\n  }\n  if (_devBrowserToken && baseUrl.hostname !== res.hostname) {\n    res.searchParams.set(_chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.constants.QueryParameters.DevBrowser, _devBrowserToken);\n  }\n  return res.toString();\n};\nvar legacyBuildUrl = (targetUrl, redirectUrl) => {\n  let url;\n  if (!targetUrl.startsWith(\"http\")) {\n    if (!redirectUrl || !redirectUrl.startsWith(\"http\")) {\n      throw new Error(\"destination url or return back url should be an absolute path url!\");\n    }\n    const baseURL = new URL(redirectUrl);\n    url = new URL(targetUrl, baseURL.origin);\n  } else {\n    url = new URL(targetUrl);\n  }\n  if (redirectUrl) {\n    url.searchParams.set(\"redirect_url\", redirectUrl);\n  }\n  return url.toString();\n};\nvar createRedirect = (params) => {\n  const { publishableKey, redirectAdapter, signInUrl, signUpUrl, baseUrl } = params;\n  const parsedPublishableKey = (0,_chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)(publishableKey);\n  const frontendApi = parsedPublishableKey?.frontendApi;\n  const isDevelopment = parsedPublishableKey?.instanceType === \"development\";\n  const accountsBaseUrl = (0,_clerk_shared_buildAccountsBaseUrl__WEBPACK_IMPORTED_MODULE_3__.buildAccountsBaseUrl)(frontendApi);\n  const redirectToSignUp = ({ returnBackUrl } = {}) => {\n    if (!signUpUrl && !accountsBaseUrl) {\n      _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwMissingPublishableKeyError();\n    }\n    const accountsSignUpUrl = `${accountsBaseUrl}/sign-up`;\n    return redirectAdapter(\n      buildUrl(baseUrl, signUpUrl || accountsSignUpUrl, returnBackUrl, isDevelopment ? params.devBrowserToken : null)\n    );\n  };\n  const redirectToSignIn = ({ returnBackUrl } = {}) => {\n    if (!signInUrl && !accountsBaseUrl) {\n      _chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.errorThrower.throwMissingPublishableKeyError();\n    }\n    const accountsSignInUrl = `${accountsBaseUrl}/sign-in`;\n    return redirectAdapter(\n      buildUrl(baseUrl, signInUrl || accountsSignInUrl, returnBackUrl, isDevelopment ? params.devBrowserToken : null)\n    );\n  };\n  return { redirectToSignUp, redirectToSignIn };\n};\n\n// src/util/decorateObjectWithResources.ts\nvar decorateObjectWithResources = async (obj, authObj, opts) => {\n  const { loadSession, loadUser, loadOrganization } = opts || {};\n  const { userId, sessionId, orgId } = authObj;\n  const { sessions, users, organizations } = (0,_chunk_JRS6WBUP_mjs__WEBPACK_IMPORTED_MODULE_0__.createBackendApiClient)({ ...opts });\n  const [sessionResp, userResp, organizationResp] = await Promise.all([\n    loadSession && sessionId ? sessions.getSession(sessionId) : Promise.resolve(void 0),\n    loadUser && userId ? users.getUser(userId) : Promise.resolve(void 0),\n    loadOrganization && orgId ? organizations.getOrganization({ organizationId: orgId }) : Promise.resolve(void 0)\n  ]);\n  const resources = stripPrivateDataFromObject({\n    session: sessionResp,\n    user: userResp,\n    organization: organizationResp\n  });\n  return Object.assign(obj, resources);\n};\nfunction stripPrivateDataFromObject(authObject) {\n  const user = authObject.user ? { ...authObject.user } : authObject.user;\n  const organization = authObject.organization ? { ...authObject.organization } : authObject.organization;\n  prunePrivateMetadata(user);\n  prunePrivateMetadata(organization);\n  return { ...authObject, user, organization };\n}\nfunction prunePrivateMetadata(resource) {\n  if (resource) {\n    if (\"privateMetadata\" in resource) {\n      delete resource[\"privateMetadata\"];\n    }\n    if (\"private_metadata\" in resource) {\n      delete resource[\"private_metadata\"];\n    }\n  }\n  return resource;\n}\n\n// src/internal.ts\n\n\n//# sourceMappingURL=internal.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/internal.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/jwt/index.mjs":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/jwt/index.mjs ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt2),\n/* harmony export */   hasValidSignature: () => (/* binding */ hasValidSignature2),\n/* harmony export */   signJwt: () => (/* binding */ signJwt2),\n/* harmony export */   verifyJwt: () => (/* binding */ verifyJwt2)\n/* harmony export */ });\n/* harmony import */ var _chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chunk-P263NW7Z.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs\");\n/* harmony import */ var _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chunk-AT3FJU3M.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs\");\n/* harmony import */ var _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../chunk-5JS2VYLU.mjs */ \"(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs\");\n\n\n\n\n// src/jwt/signJwt.ts\nfunction encodeJwtData(value) {\n  const stringified = JSON.stringify(value);\n  const encoder = new TextEncoder();\n  const encoded = encoder.encode(stringified);\n  return _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.base64url.stringify(encoded, { pad: false });\n}\nasync function signJwt(payload, key, options) {\n  if (!options.algorithm) {\n    throw new Error(\"No algorithm specified\");\n  }\n  const encoder = new TextEncoder();\n  const algorithm = (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.getCryptoAlgorithm)(options.algorithm);\n  if (!algorithm) {\n    return {\n      errors: [new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_2__.SignJWTError(`Unsupported algorithm ${options.algorithm}`)]\n    };\n  }\n  const cryptoKey = await (0,_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.importKey)(key, algorithm, \"sign\");\n  const header = options.header || { typ: \"JWT\" };\n  header.alg = options.algorithm;\n  payload.iat = Math.floor(Date.now() / 1e3);\n  const encodedHeader = encodeJwtData(header);\n  const encodedPayload = encodeJwtData(payload);\n  const firstPart = `${encodedHeader}.${encodedPayload}`;\n  try {\n    const signature = await _chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.runtime.crypto.subtle.sign(algorithm, cryptoKey, encoder.encode(firstPart));\n    const encodedSignature = `${firstPart}.${_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.base64url.stringify(new Uint8Array(signature), { pad: false })}`;\n    return { data: encodedSignature };\n  } catch (error) {\n    return { errors: [new _chunk_5JS2VYLU_mjs__WEBPACK_IMPORTED_MODULE_2__.SignJWTError(error?.message)] };\n  }\n}\n\n// src/jwt/index.ts\nvar verifyJwt2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacyReturn)(_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.verifyJwt);\nvar decodeJwt2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacySyncReturn)(_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeJwt);\nvar signJwt2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacyReturn)(signJwt);\nvar hasValidSignature2 = (0,_chunk_P263NW7Z_mjs__WEBPACK_IMPORTED_MODULE_0__.withLegacyReturn)(_chunk_AT3FJU3M_mjs__WEBPACK_IMPORTED_MODULE_1__.hasValidSignature);\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNsZXJrK2JhY2tlbmRAMS4yNS41X3JlYWN0LWRvbUAxOS4wLjBfcmVhY3RAMTkuMC4wX19yZWFjdEAxOS4wLjAvbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3Qvand0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBRytCO0FBU0E7QUFHQTs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMERBQVMsc0JBQXNCLFlBQVk7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVFQUFrQjtBQUN0QztBQUNBO0FBQ0EsbUJBQW1CLDZEQUFZLDBCQUEwQixrQkFBa0I7QUFDM0U7QUFDQTtBQUNBLDBCQUEwQiw4REFBUztBQUNuQyxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsY0FBYyxHQUFHLGVBQWU7QUFDdkQ7QUFDQSw0QkFBNEIsd0RBQU87QUFDbkMsZ0NBQWdDLFVBQVUsR0FBRywwREFBUyx3Q0FBd0MsWUFBWSxFQUFFO0FBQzVHLGFBQWE7QUFDYixJQUFJO0FBQ0osYUFBYSxhQUFhLDZEQUFZO0FBQ3RDO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIscUVBQWdCLENBQUMsMERBQVM7QUFDM0MsaUJBQWlCLHlFQUFvQixDQUFDLDBEQUFTO0FBQy9DLGVBQWUscUVBQWdCO0FBQy9CLHlCQUF5QixxRUFBZ0IsQ0FBQyxrRUFBaUI7QUFNekQ7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3pleW5lcHlpbG1hei93YXRjaC1odWItYXBwL25vZGVfbW9kdWxlcy8ucG5wbS9AY2xlcmsrYmFja2VuZEAxLjI1LjVfcmVhY3QtZG9tQDE5LjAuMF9yZWFjdEAxOS4wLjBfX3JlYWN0QDE5LjAuMC9ub2RlX21vZHVsZXMvQGNsZXJrL2JhY2tlbmQvZGlzdC9qd3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIHdpdGhMZWdhY3lSZXR1cm4sXG4gIHdpdGhMZWdhY3lTeW5jUmV0dXJuXG59IGZyb20gXCIuLi9jaHVuay1QMjYzTlc3Wi5tanNcIjtcbmltcG9ydCB7XG4gIGJhc2U2NHVybCxcbiAgZGVjb2RlSnd0LFxuICBnZXRDcnlwdG9BbGdvcml0aG0sXG4gIGhhc1ZhbGlkU2lnbmF0dXJlLFxuICBpbXBvcnRLZXksXG4gIHJ1bnRpbWUsXG4gIHZlcmlmeUp3dFxufSBmcm9tIFwiLi4vY2h1bmstQVQzRkpVM00ubWpzXCI7XG5pbXBvcnQge1xuICBTaWduSldURXJyb3Jcbn0gZnJvbSBcIi4uL2NodW5rLTVKUzJWWUxVLm1qc1wiO1xuXG4vLyBzcmMvand0L3NpZ25Kd3QudHNcbmZ1bmN0aW9uIGVuY29kZUp3dERhdGEodmFsdWUpIHtcbiAgY29uc3Qgc3RyaW5naWZpZWQgPSBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG4gIGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgY29uc3QgZW5jb2RlZCA9IGVuY29kZXIuZW5jb2RlKHN0cmluZ2lmaWVkKTtcbiAgcmV0dXJuIGJhc2U2NHVybC5zdHJpbmdpZnkoZW5jb2RlZCwgeyBwYWQ6IGZhbHNlIH0pO1xufVxuYXN5bmMgZnVuY3Rpb24gc2lnbkp3dChwYXlsb2FkLCBrZXksIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zLmFsZ29yaXRobSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGFsZ29yaXRobSBzcGVjaWZpZWRcIik7XG4gIH1cbiAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICBjb25zdCBhbGdvcml0aG0gPSBnZXRDcnlwdG9BbGdvcml0aG0ob3B0aW9ucy5hbGdvcml0aG0pO1xuICBpZiAoIWFsZ29yaXRobSkge1xuICAgIHJldHVybiB7XG4gICAgICBlcnJvcnM6IFtuZXcgU2lnbkpXVEVycm9yKGBVbnN1cHBvcnRlZCBhbGdvcml0aG0gJHtvcHRpb25zLmFsZ29yaXRobX1gKV1cbiAgICB9O1xuICB9XG4gIGNvbnN0IGNyeXB0b0tleSA9IGF3YWl0IGltcG9ydEtleShrZXksIGFsZ29yaXRobSwgXCJzaWduXCIpO1xuICBjb25zdCBoZWFkZXIgPSBvcHRpb25zLmhlYWRlciB8fCB7IHR5cDogXCJKV1RcIiB9O1xuICBoZWFkZXIuYWxnID0gb3B0aW9ucy5hbGdvcml0aG07XG4gIHBheWxvYWQuaWF0ID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMWUzKTtcbiAgY29uc3QgZW5jb2RlZEhlYWRlciA9IGVuY29kZUp3dERhdGEoaGVhZGVyKTtcbiAgY29uc3QgZW5jb2RlZFBheWxvYWQgPSBlbmNvZGVKd3REYXRhKHBheWxvYWQpO1xuICBjb25zdCBmaXJzdFBhcnQgPSBgJHtlbmNvZGVkSGVhZGVyfS4ke2VuY29kZWRQYXlsb2FkfWA7XG4gIHRyeSB7XG4gICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgcnVudGltZS5jcnlwdG8uc3VidGxlLnNpZ24oYWxnb3JpdGhtLCBjcnlwdG9LZXksIGVuY29kZXIuZW5jb2RlKGZpcnN0UGFydCkpO1xuICAgIGNvbnN0IGVuY29kZWRTaWduYXR1cmUgPSBgJHtmaXJzdFBhcnR9LiR7YmFzZTY0dXJsLnN0cmluZ2lmeShuZXcgVWludDhBcnJheShzaWduYXR1cmUpLCB7IHBhZDogZmFsc2UgfSl9YDtcbiAgICByZXR1cm4geyBkYXRhOiBlbmNvZGVkU2lnbmF0dXJlIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHsgZXJyb3JzOiBbbmV3IFNpZ25KV1RFcnJvcihlcnJvcj8ubWVzc2FnZSldIH07XG4gIH1cbn1cblxuLy8gc3JjL2p3dC9pbmRleC50c1xudmFyIHZlcmlmeUp3dDIgPSB3aXRoTGVnYWN5UmV0dXJuKHZlcmlmeUp3dCk7XG52YXIgZGVjb2RlSnd0MiA9IHdpdGhMZWdhY3lTeW5jUmV0dXJuKGRlY29kZUp3dCk7XG52YXIgc2lnbkp3dDIgPSB3aXRoTGVnYWN5UmV0dXJuKHNpZ25Kd3QpO1xudmFyIGhhc1ZhbGlkU2lnbmF0dXJlMiA9IHdpdGhMZWdhY3lSZXR1cm4oaGFzVmFsaWRTaWduYXR1cmUpO1xuZXhwb3J0IHtcbiAgZGVjb2RlSnd0MiBhcyBkZWNvZGVKd3QsXG4gIGhhc1ZhbGlkU2lnbmF0dXJlMiBhcyBoYXNWYWxpZFNpZ25hdHVyZSxcbiAgc2lnbkp3dDIgYXMgc2lnbkp3dCxcbiAgdmVyaWZ5Snd0MiBhcyB2ZXJpZnlKd3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/jwt/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/runtime/node/crypto.mjs":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/runtime/node/crypto.mjs ***!
  \*******************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   webcrypto: () => (/* reexport safe */ node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNsZXJrK2JhY2tlbmRAMS4yNS41X3JlYWN0LWRvbUAxOS4wLjBfcmVhY3RAMTkuMC4wX19yZWFjdEAxOS4wLjAvbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvcnVudGltZS9ub2RlL2NyeXB0by5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0MiLCJzb3VyY2VzIjpbIi9Vc2Vycy96ZXluZXB5aWxtYXovd2F0Y2gtaHViLWFwcC9ub2RlX21vZHVsZXMvLnBucG0vQGNsZXJrK2JhY2tlbmRAMS4yNS41X3JlYWN0LWRvbUAxOS4wLjBfcmVhY3RAMTkuMC4wX19yZWFjdEAxOS4wLjAvbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvcnVudGltZS9ub2RlL2NyeXB0by5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgd2ViY3J5cHRvIH0gZnJvbSAnbm9kZTpjcnlwdG8nO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@clerk+backend@1.25.5_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@clerk/backend/dist/runtime/node/crypto.mjs\n");

/***/ })

};
;